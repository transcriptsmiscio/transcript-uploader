"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/submit/route";
exports.ids = ["app/api/submit/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "assert":
/*!*************************!*\
  !*** external "assert" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("assert");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "child_process":
/*!********************************!*\
  !*** external "child_process" ***!
  \********************************/
/***/ ((module) => {

module.exports = require("child_process");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "events":
/*!*************************!*\
  !*** external "events" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("events");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "http":
/*!***********************!*\
  !*** external "http" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("http");

/***/ }),

/***/ "http2":
/*!************************!*\
  !*** external "http2" ***!
  \************************/
/***/ ((module) => {

module.exports = require("http2");

/***/ }),

/***/ "https":
/*!************************!*\
  !*** external "https" ***!
  \************************/
/***/ ((module) => {

module.exports = require("https");

/***/ }),

/***/ "net":
/*!**********************!*\
  !*** external "net" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("net");

/***/ }),

/***/ "os":
/*!*********************!*\
  !*** external "os" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("os");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "process":
/*!**************************!*\
  !*** external "process" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("process");

/***/ }),

/***/ "punycode":
/*!***************************!*\
  !*** external "punycode" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("punycode");

/***/ }),

/***/ "querystring":
/*!******************************!*\
  !*** external "querystring" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("querystring");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "tls":
/*!**********************!*\
  !*** external "tls" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tls");

/***/ }),

/***/ "tty":
/*!**********************!*\
  !*** external "tty" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("tty");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "zlib":
/*!***********************!*\
  !*** external "zlib" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("zlib");

/***/ }),

/***/ "node:events":
/*!******************************!*\
  !*** external "node:events" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("node:events");

/***/ }),

/***/ "node:process":
/*!*******************************!*\
  !*** external "node:process" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("node:process");

/***/ }),

/***/ "node:util":
/*!****************************!*\
  !*** external "node:util" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("node:util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsubmit%2Froute&page=%2Fapi%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsubmit%2Froute.ts&appDir=C%3A%5CProjects%5Ctranscript-uploader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Ctranscript-uploader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":
/*!******************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsubmit%2Froute&page=%2Fapi%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsubmit%2Froute.ts&appDir=C%3A%5CProjects%5Ctranscript-uploader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Ctranscript-uploader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Projects_transcript_uploader_src_app_api_submit_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/submit/route.ts */ \"(rsc)/./src/app/api/submit/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/submit/route\",\n        pathname: \"/api/submit\",\n        filename: \"route\",\n        bundlePath: \"app/api/submit/route\"\n    },\n    resolvedPagePath: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\app\\\\api\\\\submit\\\\route.ts\",\n    nextConfigOutput,\n    userland: C_Projects_transcript_uploader_src_app_api_submit_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/submit/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZzdWJtaXQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnN1Ym1pdCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnN1Ym1pdCUyRnJvdXRlLnRzJmFwcERpcj1DJTNBJTVDUHJvamVjdHMlNUN0cmFuc2NyaXB0LXVwbG9hZGVyJTVDc3JjJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDUHJvamVjdHMlNUN0cmFuc2NyaXB0LXVwbG9hZGVyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUNrQjtBQUMvRjtBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3RyYW5zY3JpcHQtdXBsb2FkZXIvPzI2NWQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcUHJvamVjdHNcXFxcdHJhbnNjcmlwdC11cGxvYWRlclxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxzdWJtaXRcXFxccm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3N1Ym1pdC9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3N1Ym1pdFwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvc3VibWl0L3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiQzpcXFxcUHJvamVjdHNcXFxcdHJhbnNjcmlwdC11cGxvYWRlclxcXFxzcmNcXFxcYXBwXFxcXGFwaVxcXFxzdWJtaXRcXFxccm91dGUudHNcIixcbiAgICBuZXh0Q29uZmlnT3V0cHV0LFxuICAgIHVzZXJsYW5kXG59KTtcbi8vIFB1bGwgb3V0IHRoZSBleHBvcnRzIHRoYXQgd2UgbmVlZCB0byBleHBvc2UgZnJvbSB0aGUgbW9kdWxlLiBUaGlzIHNob3VsZFxuLy8gYmUgZWxpbWluYXRlZCB3aGVuIHdlJ3ZlIG1vdmVkIHRoZSBvdGhlciByb3V0ZXMgdG8gdGhlIG5ldyBmb3JtYXQuIFRoZXNlXG4vLyBhcmUgdXNlZCB0byBob29rIGludG8gdGhlIHJvdXRlLlxuY29uc3QgeyByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcyB9ID0gcm91dGVNb2R1bGU7XG5jb25zdCBvcmlnaW5hbFBhdGhuYW1lID0gXCIvYXBpL3N1Ym1pdC9yb3V0ZVwiO1xuZnVuY3Rpb24gcGF0Y2hGZXRjaCgpIHtcbiAgICByZXR1cm4gX3BhdGNoRmV0Y2goe1xuICAgICAgICBzZXJ2ZXJIb29rcyxcbiAgICAgICAgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZVxuICAgIH0pO1xufVxuZXhwb3J0IHsgcm91dGVNb2R1bGUsIHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBvcmlnaW5hbFBhdGhuYW1lLCBwYXRjaEZldGNoLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsubmit%2Froute&page=%2Fapi%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsubmit%2Froute.ts&appDir=C%3A%5CProjects%5Ctranscript-uploader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Ctranscript-uploader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/submit/route.ts":
/*!*************************************!*\
  !*** ./src/app/api/submit/route.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   runtime: () => (/* binding */ runtime)\n/* harmony export */ });\n/* harmony import */ var googleapis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! googleapis */ \"(rsc)/./node_modules/googleapis/build/src/index.js\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stream */ \"stream\");\n/* harmony import */ var stream__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stream__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst runtime = \"nodejs\";\nfunction getEnv(name, optional = false) {\n    const v = process.env[name];\n    if (!v && !optional) throw new Error(`Missing env var: ${name}`);\n    return v;\n}\n// Default parent folder for all newly created student folders (\"student files\")\nconst DEFAULT_PARENT_FOLDER_ID = \"1uBtsAnQrwPMcb-BcYRfE5m_mNA7nTyyW\";\nfunction normalizeKey(originalKey) {\n    // Collapse spaces, convert snake_case to camelCase, and lower-case first letter\n    const withoutSpaces = originalKey.replace(/\\s+/g, \"\");\n    const camel = withoutSpaces.replace(/_([a-zA-Z0-9])/g, (_, c)=>c.toUpperCase());\n    const lowerFirst = camel.charAt(0).toLowerCase() + camel.slice(1);\n    // Specific canonicalizations for known fields\n    if (lowerFirst === \"additionalDocs1\") return \"additionalDoc1\";\n    if (lowerFirst === \"additionalDocs2\") return \"additionalDoc2\";\n    if (lowerFirst === \"nationalId\") return \"nationalID\";\n    if (lowerFirst === \"folderurl\" || lowerFirst === \"folderUrl\") return \"folderUrl\";\n    return lowerFirst;\n}\nfunction buildHyperlink(url, label) {\n    const safeLabel = (label || \"\").replace(/\"/g, '\"\"');\n    return `=HYPERLINK(\"${url}\",\"${safeLabel}\")`;\n}\nfunction sanitizeSegment(value) {\n    const v = (value || \"\").toString().trim();\n    if (!v) return \"\";\n    // Replace spaces with underscores and strip problematic characters\n    return v.replace(/\\s+/g, \"_\").replace(/[^A-Za-z0-9_\\-]/g, \"\");\n}\nfunction buildStudentFolderName(payload) {\n    const last = sanitizeSegment(payload.lastName);\n    const first = sanitizeSegment(payload.firstName);\n    const degree = sanitizeSegment(payload.degreeLevel);\n    const studentType = sanitizeSegment(payload.studentType);\n    const lastFirst = [\n        last,\n        first\n    ].filter(Boolean).join(\"_\");\n    const degreeAndType = [\n        degree,\n        studentType\n    ].filter(Boolean).join(\"-\");\n    if (lastFirst && degreeAndType) return `${lastFirst}-${degreeAndType}`;\n    if (lastFirst) return lastFirst;\n    if (degreeAndType) return degreeAndType;\n    return \"Student_Folder\";\n}\nfunction buildStudentNamePrefix(payload) {\n    const last = sanitizeSegment(payload.lastName);\n    const first = sanitizeSegment(payload.firstName);\n    const base = [\n        last,\n        first\n    ].filter(Boolean).join(\"_\");\n    return base ? `${base}_` : \"Student_\";\n}\nfunction extractFileExtension(name) {\n    if (!name) return \"\";\n    const match = name.match(/\\.[A-Za-z0-9]{1,8}$/);\n    return match ? match[0] : \"\";\n}\nasync function POST(request) {\n    try {\n        const formData = await request.formData();\n        // Collect payload from FormData\n        // - Normalize keys to internal camelCase\n        // - Preserve File objects separately for Drive uploads\n        const payload = {};\n        const filesByKey = {};\n        for (const [rawKey, value] of formData.entries()){\n            const key = normalizeKey(rawKey);\n            if (value instanceof File) {\n                if (value && value.size > 0) {\n                    filesByKey[key] = value;\n                    payload[key] = value.name || \"\";\n                } else {\n                    payload[key] = \"\";\n                }\n            } else {\n                payload[key] = value?.toString?.() ?? \"\";\n            }\n        }\n        // Ensure Additional Comments mirrors Notes when not explicitly provided\n        if (!payload.additionalComments && payload.notes) {\n            payload.additionalComments = payload.notes;\n        }\n        // Auth with Service Account\n        const clientEmail = getEnv(\"GOOGLE_SERVICE_ACCOUNT_EMAIL\");\n        // Support either multiline key with \\n escapes or base64-encoded key\n        const rawKey = getEnv(\"GOOGLE_PRIVATE_KEY\", true) || \"\";\n        const b64Key = getEnv(\"GOOGLE_PRIVATE_KEY_BASE64\", true) || \"\";\n        let privateKey = \"\";\n        if (b64Key) {\n            try {\n                privateKey = Buffer.from(b64Key, \"base64\").toString(\"utf8\");\n            } catch  {}\n        }\n        if (!privateKey && rawKey) {\n            privateKey = rawKey.replace(/\\\\n/g, \"\\n\");\n        }\n        if (!privateKey) {\n            throw new Error(\"GOOGLE_PRIVATE_KEY or GOOGLE_PRIVATE_KEY_BASE64 is not set\");\n        }\n        const jwt = new googleapis__WEBPACK_IMPORTED_MODULE_1__.google.auth.JWT(clientEmail, undefined, privateKey, [\n            \"https://www.googleapis.com/auth/spreadsheets\",\n            \"https://www.googleapis.com/auth/drive\"\n        ]);\n        await jwt.authorize();\n        // Always create Drive folder under the designated parent (student files)\n        // Force usage of DEFAULT_PARENT_FOLDER_ID regardless of env override\n        const driveParentId = DEFAULT_PARENT_FOLDER_ID;\n        const drive = googleapis__WEBPACK_IMPORTED_MODULE_1__.google.drive({\n            version: \"v3\",\n            auth: jwt\n        });\n        try {\n            console.log(\"Drive parent in use:\", {\n                driveParentId,\n                source: \"default\"\n            });\n        } catch  {}\n        // Preflight: verify parent exists, is a folder, and is accessible\n        try {\n            const parentMeta = await drive.files.get({\n                fileId: driveParentId,\n                fields: \"id,name,mimeType,driveId,parents\",\n                supportsAllDrives: true\n            });\n            const mimeType = parentMeta.data.mimeType;\n            if (mimeType !== \"application/vnd.google-apps.folder\") {\n                throw new Error(`DRIVE_PARENT_FOLDER_ID does not point to a folder (mimeType=${mimeType})`);\n            }\n            try {\n                console.log(\"Resolved parent folder:\", {\n                    id: parentMeta.data.id,\n                    name: parentMeta.data.name,\n                    driveId: parentMeta.data.driveId\n                });\n            } catch  {}\n        } catch (e) {\n            throw new Error(`Cannot access DRIVE_PARENT_FOLDER_ID=${driveParentId}. Ensure the service account has at least Contributor and the ID is a folder. Original error: ${e?.message || e}`);\n        }\n        const folderName = buildStudentFolderName(payload);\n        let folderUrl = \"\";\n        let folderId;\n        {\n            try {\n                const res = await drive.files.create({\n                    requestBody: {\n                        name: folderName,\n                        mimeType: \"application/vnd.google-apps.folder\",\n                        parents: [\n                            driveParentId\n                        ]\n                    },\n                    fields: \"id\",\n                    supportsAllDrives: true\n                });\n                const id = res.data.id;\n                if (!id) throw new Error(\"Failed to create Drive folder\");\n                folderId = id;\n                folderUrl = `https://drive.google.com/drive/folders/${id}`;\n                // Post-create: ensure folder resides under the intended parent\n                try {\n                    const createdMeta = await drive.files.get({\n                        fileId: folderId,\n                        fields: \"id,parents\",\n                        supportsAllDrives: true\n                    });\n                    const currentParents = createdMeta.data.parents || [];\n                    if (!currentParents.includes(driveParentId)) {\n                        const updateParams = {\n                            fileId: folderId,\n                            addParents: driveParentId,\n                            fields: \"id,parents\",\n                            supportsAllDrives: true\n                        };\n                        if (currentParents.length > 0) {\n                            updateParams.removeParents = currentParents.join(\",\");\n                        }\n                        const updated = await drive.files.update(updateParams);\n                        try {\n                            console.log(\"Adjusted folder placement into parent:\", {\n                                folderId,\n                                parents: updated.data.parents\n                            });\n                        } catch  {}\n                    }\n                } catch (placementErr) {\n                    try {\n                        console.error(\"Post-create folder placement check failed:\", placementErr);\n                    } catch  {}\n                }\n            } catch (e) {\n                throw new Error(`Failed to create Drive folder under parent ${driveParentId}. Ensure the service account has at least Contributor on that folder/shared drive. Original error: ${e?.message || e}`);\n            }\n        }\n        // Best-effort: ensure folder is accessible via link\n        if (folderId) {\n            try {\n                await drive.permissions.create({\n                    fileId: folderId,\n                    requestBody: {\n                        type: \"anyone\",\n                        role: \"reader\"\n                    },\n                    supportsAllDrives: true\n                });\n            } catch  {}\n        }\n        // No subfolders: all files will be uploaded directly into the student folder\n        // Upload files to the Drive folder and collect their view links\n        const fileViewLinks = {};\n        const fileLinkLabels = {};\n        // Upload all provided file fields into the newly created folder\n        const uploadKeys = Object.keys(filesByKey);\n        try {\n            console.log(\"Files detected for upload:\", uploadKeys);\n        } catch  {}\n        const typeLabelByKey = {\n            nationalID: \"ID\",\n            transcript1: \"transcript1\",\n            transcript2: \"transcript2\",\n            additionalDoc1: \"additionaldoc1\",\n            additionalDoc2: \"additionaldoc2\"\n        };\n        if (folderId) {\n            try {\n                console.log(\"Drive folder ready:\", {\n                    folderId,\n                    folderUrl,\n                    folderName\n                });\n            } catch  {}\n            let successfulUploadCount = 0;\n            for (const k of uploadKeys){\n                const f = filesByKey[k];\n                if (!f) continue;\n                try {\n                    const ab = await f.arrayBuffer();\n                    const buffer = Buffer.from(ab);\n                    const typeLabel = typeLabelByKey?.[k] || k;\n                    const ext = extractFileExtension(f.name);\n                    const driveName = `${folderName}_${typeLabel}${ext}`;\n                    const res = await drive.files.create({\n                        requestBody: {\n                            name: driveName,\n                            parents: [\n                                folderId\n                            ]\n                        },\n                        media: {\n                            mimeType: f.type || \"application/octet-stream\",\n                            body: stream__WEBPACK_IMPORTED_MODULE_0__.Readable.from(buffer)\n                        },\n                        fields: \"id\",\n                        supportsAllDrives: true\n                    });\n                    const id = res.data.id;\n                    if (id) {\n                        // Best-effort: make file accessible\n                        try {\n                            await drive.permissions.create({\n                                fileId: id,\n                                requestBody: {\n                                    type: \"anyone\",\n                                    role: \"reader\"\n                                },\n                                supportsAllDrives: true\n                            });\n                        } catch  {}\n                        fileViewLinks[k] = `https://drive.google.com/file/d/${id}/view`;\n                        fileLinkLabels[k] = driveName;\n                        try {\n                            console.log(\"Uploaded to Drive:\", {\n                                key: k,\n                                name: driveName,\n                                id\n                            });\n                        } catch  {}\n                        successfulUploadCount += 1;\n                    }\n                } catch (e) {\n                    // Log upload error for visibility\n                    try {\n                        console.error(\"Drive upload failed for key:\", k, e);\n                    } catch  {}\n                // skip on upload error; we'll fall back to file name in sheet\n                }\n            }\n            if (uploadKeys.length > 0 && successfulUploadCount === 0) {\n                throw new Error(\"No files were uploaded to Drive. Please verify DRIVE_PARENT_FOLDER_ID and service account access.\");\n            }\n        } else {\n            try {\n                console.error(\"No Drive folderId resolved; cannot upload files.\");\n            } catch  {}\n        }\n        // Append row to Google Sheets\n        const spreadsheetId = getEnv(\"SHEETS_SPREADSHEET_ID\");\n        const sheets = googleapis__WEBPACK_IMPORTED_MODULE_1__.google.sheets({\n            version: \"v4\",\n            auth: jwt\n        });\n        // Resolve target sheet name and starting range dynamically if SHEETS_RANGE is missing/invalid\n        let range = getEnv(\"SHEETS_RANGE\", true);\n        if (!range || !/!.+/.test(range)) {\n            const meta = await sheets.spreadsheets.get({\n                spreadsheetId\n            });\n            const sheet = meta.data.sheets?.[0];\n            const title = sheet?.properties?.title || \"Sheet1\";\n            range = `${title}!A1`;\n        }\n        // Define column order to match the Google Sheet headers exactly:\n        // FolderUrl, First Name, Middle Name, Last Name, Additional Name, Student Location, Degree Level,\n        // Gender, Birthdate, Email, Additional Comments, National ID, National Country, Transcript1,\n        // T1_Country, Transcript2, T2_Country, AdditionalDocs1, AdditionalDocs2, Terms_Conditions, Date Submitted\n        const orderedKeys = [\n            \"__FOLDER_URL__\",\n            \"firstName\",\n            \"middleName\",\n            \"lastName\",\n            \"additionalName\",\n            \"studentType\",\n            \"degreeLevel\",\n            \"gender\",\n            \"birthDate\",\n            \"personalEmail\",\n            \"additionalComments\",\n            \"nationalID\",\n            \"nationalCountry\",\n            \"transcript1\",\n            \"t1Country\",\n            \"transcript2\",\n            \"t2Country\",\n            \"additionalDoc1\",\n            \"additionalDoc2\",\n            \"__TERMS_CONDITIONS__\",\n            \"__DATE_SUBMITTED__\" // Date Submitted (computed here)\n        ];\n        // Debug logging to verify payload and ordering during troubleshooting\n        try {\n            console.log(\"Submit payload keys:\", Object.keys(payload));\n            console.log(\"Notes/AdditionalComments:\", payload.notes, payload.additionalComments);\n            console.log(\"Resolved folderUrl:\", folderUrl);\n        } catch  {}\n        const row = orderedKeys.map((k)=>{\n            // Column 1: hyperlink labeled as folder name (last_first-degree-student)\n            if (k === \"__FOLDER_URL__\") return folderUrl ? buildHyperlink(folderUrl, folderName || \"Open Folder\") : folderName || \"\";\n            if (k === \"__TERMS_CONDITIONS__\") {\n                const v = payload.termsConditions;\n                if (typeof v === \"boolean\") return v ? \"TRUE\" : \"FALSE\";\n                if (typeof v === \"string\") return v.toLowerCase() === \"true\" ? \"TRUE\" : v.toLowerCase() === \"false\" ? \"FALSE\" : v;\n                return v ?? \"\";\n            }\n            if (k === \"__DATE_SUBMITTED__\") {\n                return new Date().toISOString();\n            }\n            // Keep National Country as plain text\n            if (k === \"nationalCountry\") {\n                const country = payload[k] ?? \"\";\n                return country ?? \"\";\n            }\n            // Files: output raw Drive URL (no HYPERLINK formulas)\n            if (k === \"transcript1\" || k === \"transcript2\" || k === \"additionalDoc1\" || k === \"additionalDoc2\") {\n                const link = fileViewLinks[k];\n                const name = fileLinkLabels[k] || payload[k] || \"\";\n                return link || (name ?? \"\");\n            }\n            if (k === \"nationalID\") {\n                const link = fileViewLinks[k];\n                const name = fileLinkLabels[k] || payload[k] || \"\";\n                return link || (name ?? \"\");\n            }\n            const v = payload[k];\n            if (typeof v === \"boolean\") return v ? \"TRUE\" : \"FALSE\";\n            return v ?? \"\";\n        });\n        await sheets.spreadsheets.values.append({\n            spreadsheetId,\n            range: range,\n            valueInputOption: \"USER_ENTERED\",\n            insertDataOption: \"INSERT_ROWS\",\n            requestBody: {\n                values: [\n                    row\n                ]\n            }\n        });\n        return new Response(\"Saved\", {\n            status: 200\n        });\n    } catch (err) {\n        console.error(\"Submit error:\", err);\n        const message = err?.message || \"Submission failed\";\n        return new Response(message, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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TyxDQUFDeUYsRUFBRSxJQUFJO2dCQUNoRCxPQUFPMEIsUUFBUy9JLENBQUFBLFFBQVEsRUFBQztZQUMzQjtZQUNBLElBQUlxSCxNQUFNLGNBQWM7Z0JBQ3RCLE1BQU0wQixPQUFPdEMsYUFBYSxDQUFDWSxFQUFFO2dCQUM3QixNQUFNckgsT0FBTzBHLGNBQWMsQ0FBQ1csRUFBRSxJQUFJekYsT0FBTyxDQUFDeUYsRUFBRSxJQUFJO2dCQUNoRCxPQUFPMEIsUUFBUy9JLENBQUFBLFFBQVEsRUFBQztZQUMzQjtZQUNBLE1BQU1FLElBQUkwQixPQUFPLENBQUN5RixFQUFFO1lBQ3BCLElBQUksT0FBT25ILE1BQU0sV0FBVyxPQUFPQSxJQUFJLFNBQVM7WUFDaEQsT0FBT0EsS0FBSztRQUNkO1FBRUEsTUFBTThILE9BQU9JLFlBQVksQ0FBQ1ksTUFBTSxDQUFDQyxNQUFNLENBQUM7WUFDdENsQjtZQUNBRSxPQUFPQTtZQUNQaUIsa0JBQWtCO1lBQ2xCQyxrQkFBa0I7WUFDbEIxRCxhQUFhO2dCQUFFdUQsUUFBUTtvQkFBQ1A7aUJBQUk7WUFBQztRQUMvQjtRQUVBLE9BQU8sSUFBSVcsU0FBUyxTQUFTO1lBQUVDLFFBQVE7UUFBSTtJQUM3QyxFQUFFLE9BQU9DLEtBQVU7UUFDakJqRixRQUFRZ0MsS0FBSyxDQUFDLGlCQUFpQmlEO1FBQy9CLE1BQU1uRSxVQUFVbUUsS0FBS25FLFdBQVc7UUFDaEMsT0FBTyxJQUFJaUUsU0FBU2pFLFNBQVM7WUFBRWtFLFFBQVE7UUFBSTtJQUM3QztBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdHJhbnNjcmlwdC11cGxvYWRlci8uL3NyYy9hcHAvYXBpL3N1Ym1pdC9yb3V0ZS50cz9iNjE5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdvb2dsZSB9IGZyb20gJ2dvb2dsZWFwaXMnO1xuaW1wb3J0IHsgUmVhZGFibGUgfSBmcm9tICdzdHJlYW0nO1xuXG5leHBvcnQgY29uc3QgcnVudGltZSA9ICdub2RlanMnO1xuXG5mdW5jdGlvbiBnZXRFbnYobmFtZTogc3RyaW5nLCBvcHRpb25hbCA9IGZhbHNlKTogc3RyaW5nIHwgdW5kZWZpbmVkIHtcbiAgY29uc3QgdiA9IHByb2Nlc3MuZW52W25hbWVdO1xuICBpZiAoIXYgJiYgIW9wdGlvbmFsKSB0aHJvdyBuZXcgRXJyb3IoYE1pc3NpbmcgZW52IHZhcjogJHtuYW1lfWApO1xuICByZXR1cm4gdjtcbn1cblxuLy8gRGVmYXVsdCBwYXJlbnQgZm9sZGVyIGZvciBhbGwgbmV3bHkgY3JlYXRlZCBzdHVkZW50IGZvbGRlcnMgKFwic3R1ZGVudCBmaWxlc1wiKVxuY29uc3QgREVGQVVMVF9QQVJFTlRfRk9MREVSX0lEID0gJzF1QnRzQW5RcndQTWNiLUJjWVJmRTVtX21OQTduVHl5Vyc7XG5cbmZ1bmN0aW9uIG5vcm1hbGl6ZUtleShvcmlnaW5hbEtleTogc3RyaW5nKTogc3RyaW5nIHtcbiAgLy8gQ29sbGFwc2Ugc3BhY2VzLCBjb252ZXJ0IHNuYWtlX2Nhc2UgdG8gY2FtZWxDYXNlLCBhbmQgbG93ZXItY2FzZSBmaXJzdCBsZXR0ZXJcbiAgY29uc3Qgd2l0aG91dFNwYWNlcyA9IG9yaWdpbmFsS2V5LnJlcGxhY2UoL1xccysvZywgJycpO1xuICBjb25zdCBjYW1lbCA9IHdpdGhvdXRTcGFjZXMucmVwbGFjZSgvXyhbYS16QS1aMC05XSkvZywgKF8sIGMpID0+IChjIGFzIHN0cmluZykudG9VcHBlckNhc2UoKSk7XG4gIGNvbnN0IGxvd2VyRmlyc3QgPSBjYW1lbC5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSArIGNhbWVsLnNsaWNlKDEpO1xuICAvLyBTcGVjaWZpYyBjYW5vbmljYWxpemF0aW9ucyBmb3Iga25vd24gZmllbGRzXG4gIGlmIChsb3dlckZpcnN0ID09PSAnYWRkaXRpb25hbERvY3MxJykgcmV0dXJuICdhZGRpdGlvbmFsRG9jMSc7XG4gIGlmIChsb3dlckZpcnN0ID09PSAnYWRkaXRpb25hbERvY3MyJykgcmV0dXJuICdhZGRpdGlvbmFsRG9jMic7XG4gIGlmIChsb3dlckZpcnN0ID09PSAnbmF0aW9uYWxJZCcpIHJldHVybiAnbmF0aW9uYWxJRCc7XG4gIGlmIChsb3dlckZpcnN0ID09PSAnZm9sZGVydXJsJyB8fCBsb3dlckZpcnN0ID09PSAnZm9sZGVyVXJsJykgcmV0dXJuICdmb2xkZXJVcmwnO1xuICByZXR1cm4gbG93ZXJGaXJzdDtcbn1cblxuZnVuY3Rpb24gYnVpbGRIeXBlcmxpbmsodXJsOiBzdHJpbmcsIGxhYmVsOiBzdHJpbmcpOiBzdHJpbmcge1xuICBjb25zdCBzYWZlTGFiZWwgPSAobGFiZWwgfHwgJycpLnJlcGxhY2UoL1wiL2csICdcIlwiJyk7XG4gIHJldHVybiBgPUhZUEVSTElOSyhcIiR7dXJsfVwiLFwiJHtzYWZlTGFiZWx9XCIpYDtcbn1cblxuZnVuY3Rpb24gc2FuaXRpemVTZWdtZW50KHZhbHVlOiBzdHJpbmcgfCB1bmRlZmluZWQpOiBzdHJpbmcge1xuICBjb25zdCB2ID0gKHZhbHVlIHx8ICcnKS50b1N0cmluZygpLnRyaW0oKTtcbiAgaWYgKCF2KSByZXR1cm4gJyc7XG4gIC8vIFJlcGxhY2Ugc3BhY2VzIHdpdGggdW5kZXJzY29yZXMgYW5kIHN0cmlwIHByb2JsZW1hdGljIGNoYXJhY3RlcnNcbiAgcmV0dXJuIHYucmVwbGFjZSgvXFxzKy9nLCAnXycpLnJlcGxhY2UoL1teQS1aYS16MC05X1xcLV0vZywgJycpO1xufVxuXG5mdW5jdGlvbiBidWlsZFN0dWRlbnRGb2xkZXJOYW1lKHBheWxvYWQ6IFJlY29yZDxzdHJpbmcsIGFueT4pOiBzdHJpbmcge1xuICBjb25zdCBsYXN0ID0gc2FuaXRpemVTZWdtZW50KHBheWxvYWQubGFzdE5hbWUpO1xuICBjb25zdCBmaXJzdCA9IHNhbml0aXplU2VnbWVudChwYXlsb2FkLmZpcnN0TmFtZSk7XG4gIGNvbnN0IGRlZ3JlZSA9IHNhbml0aXplU2VnbWVudChwYXlsb2FkLmRlZ3JlZUxldmVsKTtcbiAgY29uc3Qgc3R1ZGVudFR5cGUgPSBzYW5pdGl6ZVNlZ21lbnQocGF5bG9hZC5zdHVkZW50VHlwZSk7XG4gIGNvbnN0IGxhc3RGaXJzdCA9IFtsYXN0LCBmaXJzdF0uZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ18nKTtcbiAgY29uc3QgZGVncmVlQW5kVHlwZSA9IFtkZWdyZWUsIHN0dWRlbnRUeXBlXS5maWx0ZXIoQm9vbGVhbikuam9pbignLScpO1xuICBpZiAobGFzdEZpcnN0ICYmIGRlZ3JlZUFuZFR5cGUpIHJldHVybiBgJHtsYXN0Rmlyc3R9LSR7ZGVncmVlQW5kVHlwZX1gO1xuICBpZiAobGFzdEZpcnN0KSByZXR1cm4gbGFzdEZpcnN0O1xuICBpZiAoZGVncmVlQW5kVHlwZSkgcmV0dXJuIGRlZ3JlZUFuZFR5cGU7XG4gIHJldHVybiAnU3R1ZGVudF9Gb2xkZXInO1xufVxuXG5mdW5jdGlvbiBidWlsZFN0dWRlbnROYW1lUHJlZml4KHBheWxvYWQ6IFJlY29yZDxzdHJpbmcsIGFueT4pOiBzdHJpbmcge1xuICBjb25zdCBsYXN0ID0gc2FuaXRpemVTZWdtZW50KHBheWxvYWQubGFzdE5hbWUpO1xuICBjb25zdCBmaXJzdCA9IHNhbml0aXplU2VnbWVudChwYXlsb2FkLmZpcnN0TmFtZSk7XG4gIGNvbnN0IGJhc2UgPSBbbGFzdCwgZmlyc3RdLmZpbHRlcihCb29sZWFuKS5qb2luKCdfJyk7XG4gIHJldHVybiBiYXNlID8gYCR7YmFzZX1fYCA6ICdTdHVkZW50Xyc7XG59XG5cbmZ1bmN0aW9uIGV4dHJhY3RGaWxlRXh0ZW5zaW9uKG5hbWU6IHN0cmluZyB8IHVuZGVmaW5lZCk6IHN0cmluZyB7XG4gIGlmICghbmFtZSkgcmV0dXJuICcnO1xuICBjb25zdCBtYXRjaCA9IG5hbWUubWF0Y2goL1xcLltBLVphLXowLTldezEsOH0kLyk7XG4gIHJldHVybiBtYXRjaCA/IG1hdGNoWzBdIDogJyc7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3Q6IFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBmb3JtRGF0YSA9IGF3YWl0IHJlcXVlc3QuZm9ybURhdGEoKTtcblxuICAgIC8vIENvbGxlY3QgcGF5bG9hZCBmcm9tIEZvcm1EYXRhXG4gICAgLy8gLSBOb3JtYWxpemUga2V5cyB0byBpbnRlcm5hbCBjYW1lbENhc2VcbiAgICAvLyAtIFByZXNlcnZlIEZpbGUgb2JqZWN0cyBzZXBhcmF0ZWx5IGZvciBEcml2ZSB1cGxvYWRzXG4gICAgY29uc3QgcGF5bG9hZDogUmVjb3JkPHN0cmluZywgYW55PiA9IHt9O1xuICAgIGNvbnN0IGZpbGVzQnlLZXk6IFJlY29yZDxzdHJpbmcsIEZpbGU+ID0ge307XG4gICAgZm9yIChjb25zdCBbcmF3S2V5LCB2YWx1ZV0gb2YgZm9ybURhdGEuZW50cmllcygpKSB7XG4gICAgICBjb25zdCBrZXkgPSBub3JtYWxpemVLZXkocmF3S2V5KTtcbiAgICAgIGlmICh2YWx1ZSBpbnN0YW5jZW9mIEZpbGUpIHtcbiAgICAgICAgaWYgKHZhbHVlICYmIHZhbHVlLnNpemUgPiAwKSB7XG4gICAgICAgICAgZmlsZXNCeUtleVtrZXldID0gdmFsdWU7XG4gICAgICAgICAgcGF5bG9hZFtrZXldID0gdmFsdWUubmFtZSB8fCAnJztcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBwYXlsb2FkW2tleV0gPSAnJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcGF5bG9hZFtrZXldID0gdmFsdWU/LnRvU3RyaW5nPy4oKSA/PyAnJztcbiAgICAgIH1cbiAgICB9XG5cbiAgICAvLyBFbnN1cmUgQWRkaXRpb25hbCBDb21tZW50cyBtaXJyb3JzIE5vdGVzIHdoZW4gbm90IGV4cGxpY2l0bHkgcHJvdmlkZWRcbiAgICBpZiAoIXBheWxvYWQuYWRkaXRpb25hbENvbW1lbnRzICYmIHBheWxvYWQubm90ZXMpIHtcbiAgICAgIHBheWxvYWQuYWRkaXRpb25hbENvbW1lbnRzID0gcGF5bG9hZC5ub3RlcztcbiAgICB9XG5cbiAgICAvLyBBdXRoIHdpdGggU2VydmljZSBBY2NvdW50XG4gICAgY29uc3QgY2xpZW50RW1haWwgPSBnZXRFbnYoJ0dPT0dMRV9TRVJWSUNFX0FDQ09VTlRfRU1BSUwnKSBhcyBzdHJpbmc7XG4gICAgLy8gU3VwcG9ydCBlaXRoZXIgbXVsdGlsaW5lIGtleSB3aXRoIFxcbiBlc2NhcGVzIG9yIGJhc2U2NC1lbmNvZGVkIGtleVxuICAgIGNvbnN0IHJhd0tleSA9IGdldEVudignR09PR0xFX1BSSVZBVEVfS0VZJywgdHJ1ZSkgfHwgJyc7XG4gICAgY29uc3QgYjY0S2V5ID0gZ2V0RW52KCdHT09HTEVfUFJJVkFURV9LRVlfQkFTRTY0JywgdHJ1ZSkgfHwgJyc7XG4gICAgbGV0IHByaXZhdGVLZXkgPSAnJztcbiAgICBpZiAoYjY0S2V5KSB7XG4gICAgICB0cnkgeyBwcml2YXRlS2V5ID0gQnVmZmVyLmZyb20oYjY0S2V5LCAnYmFzZTY0JykudG9TdHJpbmcoJ3V0ZjgnKTsgfSBjYXRjaCB7fVxuICAgIH1cbiAgICBpZiAoIXByaXZhdGVLZXkgJiYgcmF3S2V5KSB7XG4gICAgICBwcml2YXRlS2V5ID0gcmF3S2V5LnJlcGxhY2UoL1xcXFxuL2csICdcXG4nKTtcbiAgICB9XG4gICAgaWYgKCFwcml2YXRlS2V5KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoJ0dPT0dMRV9QUklWQVRFX0tFWSBvciBHT09HTEVfUFJJVkFURV9LRVlfQkFTRTY0IGlzIG5vdCBzZXQnKTtcbiAgICB9XG4gICAgY29uc3Qgand0ID0gbmV3IGdvb2dsZS5hdXRoLkpXVChcbiAgICAgIGNsaWVudEVtYWlsLFxuICAgICAgdW5kZWZpbmVkLFxuICAgICAgcHJpdmF0ZUtleSxcbiAgICAgIFtcbiAgICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvc3ByZWFkc2hlZXRzJyxcbiAgICAgICAgJ2h0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL2F1dGgvZHJpdmUnLFxuICAgICAgXVxuICAgICk7XG4gICAgYXdhaXQgand0LmF1dGhvcml6ZSgpO1xuXG4gICAgLy8gQWx3YXlzIGNyZWF0ZSBEcml2ZSBmb2xkZXIgdW5kZXIgdGhlIGRlc2lnbmF0ZWQgcGFyZW50IChzdHVkZW50IGZpbGVzKVxuICAgIC8vIEZvcmNlIHVzYWdlIG9mIERFRkFVTFRfUEFSRU5UX0ZPTERFUl9JRCByZWdhcmRsZXNzIG9mIGVudiBvdmVycmlkZVxuICAgIGNvbnN0IGRyaXZlUGFyZW50SWQgPSBERUZBVUxUX1BBUkVOVF9GT0xERVJfSUQ7XG4gICAgY29uc3QgZHJpdmUgPSBnb29nbGUuZHJpdmUoeyB2ZXJzaW9uOiAndjMnLCBhdXRoOiBqd3QgfSk7XG4gICAgdHJ5IHsgY29uc29sZS5sb2coJ0RyaXZlIHBhcmVudCBpbiB1c2U6JywgeyBkcml2ZVBhcmVudElkLCBzb3VyY2U6ICdkZWZhdWx0JyB9KTsgfSBjYXRjaCB7fVxuXG4gICAgLy8gUHJlZmxpZ2h0OiB2ZXJpZnkgcGFyZW50IGV4aXN0cywgaXMgYSBmb2xkZXIsIGFuZCBpcyBhY2Nlc3NpYmxlXG4gICAgdHJ5IHtcbiAgICAgIGNvbnN0IHBhcmVudE1ldGEgPSBhd2FpdCBkcml2ZS5maWxlcy5nZXQoe1xuICAgICAgICBmaWxlSWQ6IGRyaXZlUGFyZW50SWQsXG4gICAgICAgIGZpZWxkczogJ2lkLG5hbWUsbWltZVR5cGUsZHJpdmVJZCxwYXJlbnRzJyxcbiAgICAgICAgc3VwcG9ydHNBbGxEcml2ZXM6IHRydWUsXG4gICAgICB9KTtcbiAgICAgIGNvbnN0IG1pbWVUeXBlID0gcGFyZW50TWV0YS5kYXRhLm1pbWVUeXBlO1xuICAgICAgaWYgKG1pbWVUeXBlICE9PSAnYXBwbGljYXRpb24vdm5kLmdvb2dsZS1hcHBzLmZvbGRlcicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBEUklWRV9QQVJFTlRfRk9MREVSX0lEIGRvZXMgbm90IHBvaW50IHRvIGEgZm9sZGVyIChtaW1lVHlwZT0ke21pbWVUeXBlfSlgKTtcbiAgICAgIH1cbiAgICAgIHRyeSB7IGNvbnNvbGUubG9nKCdSZXNvbHZlZCBwYXJlbnQgZm9sZGVyOicsIHsgaWQ6IHBhcmVudE1ldGEuZGF0YS5pZCwgbmFtZTogcGFyZW50TWV0YS5kYXRhLm5hbWUsIGRyaXZlSWQ6IChwYXJlbnRNZXRhLmRhdGEgYXMgYW55KS5kcml2ZUlkIH0pOyB9IGNhdGNoIHt9XG4gICAgfSBjYXRjaCAoZTogYW55KSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYENhbm5vdCBhY2Nlc3MgRFJJVkVfUEFSRU5UX0ZPTERFUl9JRD0ke2RyaXZlUGFyZW50SWR9LiBFbnN1cmUgdGhlIHNlcnZpY2UgYWNjb3VudCBoYXMgYXQgbGVhc3QgQ29udHJpYnV0b3IgYW5kIHRoZSBJRCBpcyBhIGZvbGRlci4gT3JpZ2luYWwgZXJyb3I6ICR7ZT8ubWVzc2FnZSB8fCBlfWApO1xuICAgIH1cblxuICAgIGNvbnN0IGZvbGRlck5hbWUgPSBidWlsZFN0dWRlbnRGb2xkZXJOYW1lKHBheWxvYWQpO1xuICAgIGxldCBmb2xkZXJVcmwgPSAnJztcbiAgICBsZXQgZm9sZGVySWQ6IHN0cmluZyB8IHVuZGVmaW5lZDtcbiAgICB7XG4gICAgICB0cnkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBkcml2ZS5maWxlcy5jcmVhdGUoe1xuICAgICAgICAgIHJlcXVlc3RCb2R5OiB7XG4gICAgICAgICAgICBuYW1lOiBmb2xkZXJOYW1lLFxuICAgICAgICAgICAgbWltZVR5cGU6ICdhcHBsaWNhdGlvbi92bmQuZ29vZ2xlLWFwcHMuZm9sZGVyJyxcbiAgICAgICAgICAgIHBhcmVudHM6IFtkcml2ZVBhcmVudElkIGFzIHN0cmluZ10sXG4gICAgICAgICAgfSxcbiAgICAgICAgICBmaWVsZHM6ICdpZCcsXG4gICAgICAgICAgc3VwcG9ydHNBbGxEcml2ZXM6IHRydWUsXG4gICAgICAgIH0pO1xuICAgICAgICBjb25zdCBpZCA9IHJlcy5kYXRhLmlkO1xuICAgICAgICBpZiAoIWlkKSB0aHJvdyBuZXcgRXJyb3IoJ0ZhaWxlZCB0byBjcmVhdGUgRHJpdmUgZm9sZGVyJyk7XG4gICAgICAgIGZvbGRlcklkID0gaWQ7XG4gICAgICAgIGZvbGRlclVybCA9IGBodHRwczovL2RyaXZlLmdvb2dsZS5jb20vZHJpdmUvZm9sZGVycy8ke2lkfWA7XG4gICAgICAgIC8vIFBvc3QtY3JlYXRlOiBlbnN1cmUgZm9sZGVyIHJlc2lkZXMgdW5kZXIgdGhlIGludGVuZGVkIHBhcmVudFxuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGNyZWF0ZWRNZXRhID0gYXdhaXQgZHJpdmUuZmlsZXMuZ2V0KHtcbiAgICAgICAgICAgIGZpbGVJZDogZm9sZGVySWQsXG4gICAgICAgICAgICBmaWVsZHM6ICdpZCxwYXJlbnRzJyxcbiAgICAgICAgICAgIHN1cHBvcnRzQWxsRHJpdmVzOiB0cnVlLFxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGNvbnN0IGN1cnJlbnRQYXJlbnRzID0gY3JlYXRlZE1ldGEuZGF0YS5wYXJlbnRzIHx8IFtdO1xuICAgICAgICAgIGlmICghY3VycmVudFBhcmVudHMuaW5jbHVkZXMoZHJpdmVQYXJlbnRJZCkpIHtcbiAgICAgICAgICAgIGNvbnN0IHVwZGF0ZVBhcmFtczogYW55ID0ge1xuICAgICAgICAgICAgICBmaWxlSWQ6IGZvbGRlcklkLFxuICAgICAgICAgICAgICBhZGRQYXJlbnRzOiBkcml2ZVBhcmVudElkLFxuICAgICAgICAgICAgICBmaWVsZHM6ICdpZCxwYXJlbnRzJyxcbiAgICAgICAgICAgICAgc3VwcG9ydHNBbGxEcml2ZXM6IHRydWUsXG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKGN1cnJlbnRQYXJlbnRzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgdXBkYXRlUGFyYW1zLnJlbW92ZVBhcmVudHMgPSBjdXJyZW50UGFyZW50cy5qb2luKCcsJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCB1cGRhdGVkID0gYXdhaXQgZHJpdmUuZmlsZXMudXBkYXRlKHVwZGF0ZVBhcmFtcyk7XG4gICAgICAgICAgICB0cnkgeyBjb25zb2xlLmxvZygnQWRqdXN0ZWQgZm9sZGVyIHBsYWNlbWVudCBpbnRvIHBhcmVudDonLCB7IGZvbGRlcklkLCBwYXJlbnRzOiB1cGRhdGVkLmRhdGEucGFyZW50cyB9KTsgfSBjYXRjaCB7fVxuICAgICAgICAgIH1cbiAgICAgICAgfSBjYXRjaCAocGxhY2VtZW50RXJyKSB7XG4gICAgICAgICAgdHJ5IHsgY29uc29sZS5lcnJvcignUG9zdC1jcmVhdGUgZm9sZGVyIHBsYWNlbWVudCBjaGVjayBmYWlsZWQ6JywgcGxhY2VtZW50RXJyKTsgfSBjYXRjaCB7fVxuICAgICAgICB9XG4gICAgICB9IGNhdGNoIChlOiBhbnkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBGYWlsZWQgdG8gY3JlYXRlIERyaXZlIGZvbGRlciB1bmRlciBwYXJlbnQgJHtkcml2ZVBhcmVudElkfS4gRW5zdXJlIHRoZSBzZXJ2aWNlIGFjY291bnQgaGFzIGF0IGxlYXN0IENvbnRyaWJ1dG9yIG9uIHRoYXQgZm9sZGVyL3NoYXJlZCBkcml2ZS4gT3JpZ2luYWwgZXJyb3I6ICR7ZT8ubWVzc2FnZSB8fCBlfWApO1xuICAgICAgfVxuICAgIH1cblxuICAgIC8vIEJlc3QtZWZmb3J0OiBlbnN1cmUgZm9sZGVyIGlzIGFjY2Vzc2libGUgdmlhIGxpbmtcbiAgICBpZiAoZm9sZGVySWQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGRyaXZlLnBlcm1pc3Npb25zLmNyZWF0ZSh7XG4gICAgICAgICAgZmlsZUlkOiBmb2xkZXJJZCxcbiAgICAgICAgICByZXF1ZXN0Qm9keTogeyB0eXBlOiAnYW55b25lJywgcm9sZTogJ3JlYWRlcicgfSxcbiAgICAgICAgICBzdXBwb3J0c0FsbERyaXZlczogdHJ1ZSxcbiAgICAgICAgfSk7XG4gICAgICB9IGNhdGNoIHt9XG4gICAgfVxuXG4gICAgLy8gTm8gc3ViZm9sZGVyczogYWxsIGZpbGVzIHdpbGwgYmUgdXBsb2FkZWQgZGlyZWN0bHkgaW50byB0aGUgc3R1ZGVudCBmb2xkZXJcblxuICAgIC8vIFVwbG9hZCBmaWxlcyB0byB0aGUgRHJpdmUgZm9sZGVyIGFuZCBjb2xsZWN0IHRoZWlyIHZpZXcgbGlua3NcbiAgICBjb25zdCBmaWxlVmlld0xpbmtzOiBSZWNvcmQ8c3RyaW5nLCBzdHJpbmc+ID0ge307XG4gICAgY29uc3QgZmlsZUxpbmtMYWJlbHM6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7fTtcbiAgICAvLyBVcGxvYWQgYWxsIHByb3ZpZGVkIGZpbGUgZmllbGRzIGludG8gdGhlIG5ld2x5IGNyZWF0ZWQgZm9sZGVyXG4gICAgY29uc3QgdXBsb2FkS2V5cyA9IE9iamVjdC5rZXlzKGZpbGVzQnlLZXkpO1xuICAgIHRyeSB7IGNvbnNvbGUubG9nKCdGaWxlcyBkZXRlY3RlZCBmb3IgdXBsb2FkOicsIHVwbG9hZEtleXMpOyB9IGNhdGNoIHt9XG4gICAgY29uc3QgdHlwZUxhYmVsQnlLZXk6IFJlY29yZDxzdHJpbmcsIHN0cmluZz4gPSB7XG4gICAgICBuYXRpb25hbElEOiAnSUQnLFxuICAgICAgdHJhbnNjcmlwdDE6ICd0cmFuc2NyaXB0MScsXG4gICAgICB0cmFuc2NyaXB0MjogJ3RyYW5zY3JpcHQyJyxcbiAgICAgIGFkZGl0aW9uYWxEb2MxOiAnYWRkaXRpb25hbGRvYzEnLFxuICAgICAgYWRkaXRpb25hbERvYzI6ICdhZGRpdGlvbmFsZG9jMicsXG4gICAgfTtcbiAgICBpZiAoZm9sZGVySWQpIHtcbiAgICAgIHRyeSB7IGNvbnNvbGUubG9nKCdEcml2ZSBmb2xkZXIgcmVhZHk6JywgeyBmb2xkZXJJZCwgZm9sZGVyVXJsLCBmb2xkZXJOYW1lIH0pOyB9IGNhdGNoIHt9XG4gICAgICBsZXQgc3VjY2Vzc2Z1bFVwbG9hZENvdW50ID0gMDtcbiAgICAgIGZvciAoY29uc3QgayBvZiB1cGxvYWRLZXlzKSB7XG4gICAgICAgIGNvbnN0IGYgPSBmaWxlc0J5S2V5W2tdO1xuICAgICAgICBpZiAoIWYpIGNvbnRpbnVlO1xuICAgICAgICB0cnkge1xuICAgICAgICAgIGNvbnN0IGFiID0gYXdhaXQgZi5hcnJheUJ1ZmZlcigpO1xuICAgICAgICAgIGNvbnN0IGJ1ZmZlciA9IEJ1ZmZlci5mcm9tKGFiKTtcbiAgICAgICAgICBjb25zdCB0eXBlTGFiZWwgPSAodHlwZUxhYmVsQnlLZXkgYXMgYW55KT8uW2tdIHx8IGs7XG4gICAgICAgICAgY29uc3QgZXh0ID0gZXh0cmFjdEZpbGVFeHRlbnNpb24oZi5uYW1lKTtcbiAgICAgICAgICBjb25zdCBkcml2ZU5hbWUgPSBgJHtmb2xkZXJOYW1lfV8ke3R5cGVMYWJlbH0ke2V4dH1gO1xuICAgICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGRyaXZlLmZpbGVzLmNyZWF0ZSh7XG4gICAgICAgICAgICByZXF1ZXN0Qm9keToge1xuICAgICAgICAgICAgICBuYW1lOiBkcml2ZU5hbWUsXG4gICAgICAgICAgICAgIHBhcmVudHM6IFtmb2xkZXJJZF0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgbWVkaWE6IHtcbiAgICAgICAgICAgICAgbWltZVR5cGU6IChmIGFzIGFueSkudHlwZSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyxcbiAgICAgICAgICAgICAgYm9keTogUmVhZGFibGUuZnJvbShidWZmZXIpLFxuICAgICAgICAgICAgfSBhcyBhbnksXG4gICAgICAgICAgICBmaWVsZHM6ICdpZCcsXG4gICAgICAgICAgICBzdXBwb3J0c0FsbERyaXZlczogdHJ1ZSxcbiAgICAgICAgICB9IGFzIGFueSk7XG4gICAgICAgICAgY29uc3QgaWQgPSAocmVzLmRhdGEgYXMgYW55KS5pZCBhcyBzdHJpbmcgfCB1bmRlZmluZWQ7XG4gICAgICAgICAgaWYgKGlkKSB7XG4gICAgICAgICAgICAvLyBCZXN0LWVmZm9ydDogbWFrZSBmaWxlIGFjY2Vzc2libGVcbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgIGF3YWl0IGRyaXZlLnBlcm1pc3Npb25zLmNyZWF0ZSh7XG4gICAgICAgICAgICAgICAgZmlsZUlkOiBpZCxcbiAgICAgICAgICAgICAgICByZXF1ZXN0Qm9keTogeyB0eXBlOiAnYW55b25lJywgcm9sZTogJ3JlYWRlcicgfSxcbiAgICAgICAgICAgICAgICBzdXBwb3J0c0FsbERyaXZlczogdHJ1ZSxcbiAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IGNhdGNoIHt9XG4gICAgICAgICAgICBmaWxlVmlld0xpbmtzW2tdID0gYGh0dHBzOi8vZHJpdmUuZ29vZ2xlLmNvbS9maWxlL2QvJHtpZH0vdmlld2A7XG4gICAgICAgICAgICBmaWxlTGlua0xhYmVsc1trXSA9IGRyaXZlTmFtZTtcbiAgICAgICAgICAgIHRyeSB7IGNvbnNvbGUubG9nKCdVcGxvYWRlZCB0byBEcml2ZTonLCB7IGtleTogaywgbmFtZTogZHJpdmVOYW1lLCBpZCB9KTsgfSBjYXRjaCB7fVxuICAgICAgICAgICAgc3VjY2Vzc2Z1bFVwbG9hZENvdW50ICs9IDE7XG4gICAgICAgICAgfVxuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gTG9nIHVwbG9hZCBlcnJvciBmb3IgdmlzaWJpbGl0eVxuICAgICAgICAgIHRyeSB7IGNvbnNvbGUuZXJyb3IoJ0RyaXZlIHVwbG9hZCBmYWlsZWQgZm9yIGtleTonLCBrLCBlKTsgfSBjYXRjaCB7fVxuICAgICAgICAgIC8vIHNraXAgb24gdXBsb2FkIGVycm9yOyB3ZSdsbCBmYWxsIGJhY2sgdG8gZmlsZSBuYW1lIGluIHNoZWV0XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmICh1cGxvYWRLZXlzLmxlbmd0aCA+IDAgJiYgc3VjY2Vzc2Z1bFVwbG9hZENvdW50ID09PSAwKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gZmlsZXMgd2VyZSB1cGxvYWRlZCB0byBEcml2ZS4gUGxlYXNlIHZlcmlmeSBEUklWRV9QQVJFTlRfRk9MREVSX0lEIGFuZCBzZXJ2aWNlIGFjY291bnQgYWNjZXNzLicpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0cnkgeyBjb25zb2xlLmVycm9yKCdObyBEcml2ZSBmb2xkZXJJZCByZXNvbHZlZDsgY2Fubm90IHVwbG9hZCBmaWxlcy4nKTsgfSBjYXRjaCB7fVxuICAgIH1cblxuICAgIC8vIEFwcGVuZCByb3cgdG8gR29vZ2xlIFNoZWV0c1xuICAgIGNvbnN0IHNwcmVhZHNoZWV0SWQgPSBnZXRFbnYoJ1NIRUVUU19TUFJFQURTSEVFVF9JRCcpIGFzIHN0cmluZztcbiAgICBjb25zdCBzaGVldHMgPSBnb29nbGUuc2hlZXRzKHsgdmVyc2lvbjogJ3Y0JywgYXV0aDogand0IH0pO1xuXG4gICAgLy8gUmVzb2x2ZSB0YXJnZXQgc2hlZXQgbmFtZSBhbmQgc3RhcnRpbmcgcmFuZ2UgZHluYW1pY2FsbHkgaWYgU0hFRVRTX1JBTkdFIGlzIG1pc3NpbmcvaW52YWxpZFxuICAgIGxldCByYW5nZSA9IGdldEVudignU0hFRVRTX1JBTkdFJywgdHJ1ZSkgYXMgc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIGlmICghcmFuZ2UgfHwgIS8hLisvLnRlc3QocmFuZ2UpKSB7XG4gICAgICBjb25zdCBtZXRhID0gYXdhaXQgc2hlZXRzLnNwcmVhZHNoZWV0cy5nZXQoeyBzcHJlYWRzaGVldElkIH0pO1xuICAgICAgY29uc3Qgc2hlZXQgPSBtZXRhLmRhdGEuc2hlZXRzPy5bMF07XG4gICAgICBjb25zdCB0aXRsZSA9IHNoZWV0Py5wcm9wZXJ0aWVzPy50aXRsZSB8fCAnU2hlZXQxJztcbiAgICAgIHJhbmdlID0gYCR7dGl0bGV9IUExYDtcbiAgICB9XG5cbiAgICAvLyBEZWZpbmUgY29sdW1uIG9yZGVyIHRvIG1hdGNoIHRoZSBHb29nbGUgU2hlZXQgaGVhZGVycyBleGFjdGx5OlxuICAgIC8vIEZvbGRlclVybCwgRmlyc3QgTmFtZSwgTWlkZGxlIE5hbWUsIExhc3QgTmFtZSwgQWRkaXRpb25hbCBOYW1lLCBTdHVkZW50IExvY2F0aW9uLCBEZWdyZWUgTGV2ZWwsXG4gICAgLy8gR2VuZGVyLCBCaXJ0aGRhdGUsIEVtYWlsLCBBZGRpdGlvbmFsIENvbW1lbnRzLCBOYXRpb25hbCBJRCwgTmF0aW9uYWwgQ291bnRyeSwgVHJhbnNjcmlwdDEsXG4gICAgLy8gVDFfQ291bnRyeSwgVHJhbnNjcmlwdDIsIFQyX0NvdW50cnksIEFkZGl0aW9uYWxEb2NzMSwgQWRkaXRpb25hbERvY3MyLCBUZXJtc19Db25kaXRpb25zLCBEYXRlIFN1Ym1pdHRlZFxuICAgIGNvbnN0IG9yZGVyZWRLZXlzID0gW1xuICAgICAgJ19fRk9MREVSX1VSTF9fJyxcbiAgICAgICdmaXJzdE5hbWUnLCAgICAgICAgICAgICAgLy8gRmlyc3QgTmFtZVxuICAgICAgJ21pZGRsZU5hbWUnLCAgICAgICAgICAgICAvLyBNaWRkbGUgTmFtZVxuICAgICAgJ2xhc3ROYW1lJywgICAgICAgICAgICAgICAvLyBMYXN0IE5hbWVcbiAgICAgICdhZGRpdGlvbmFsTmFtZScsICAgICAgICAgLy8gQWRkaXRpb25hbCBOYW1lXG4gICAgICAnc3R1ZGVudFR5cGUnLCAgICAgICAgICAgIC8vIFN0dWRlbnQgTG9jYXRpb25cbiAgICAgICdkZWdyZWVMZXZlbCcsICAgICAgICAgICAgLy8gRGVncmVlIExldmVsXG4gICAgICAnZ2VuZGVyJywgICAgICAgICAgICAgICAgIC8vIEdlbmRlclxuICAgICAgJ2JpcnRoRGF0ZScsICAgICAgICAgICAgICAvLyBCaXJ0aGRhdGVcbiAgICAgICdwZXJzb25hbEVtYWlsJywgICAgICAgICAgLy8gRW1haWxcbiAgICAgICdhZGRpdGlvbmFsQ29tbWVudHMnLCAgICAgLy8gQWRkaXRpb25hbCBDb21tZW50c1xuICAgICAgJ25hdGlvbmFsSUQnLCAgICAgICAgICAgICAvLyBOYXRpb25hbCBJRCAoZmlsZSBuYW1lIGNhcHR1cmVkKVxuICAgICAgJ25hdGlvbmFsQ291bnRyeScsICAgICAgICAvLyBOYXRpb25hbCBDb3VudHJ5IChuYW1lKVxuICAgICAgJ3RyYW5zY3JpcHQxJywgICAgICAgICAgICAvLyBUcmFuc2NyaXB0MSAoZmlsZSBuYW1lIGNhcHR1cmVkKVxuICAgICAgJ3QxQ291bnRyeScsICAgICAgICAgICAgICAvLyBUMV9Db3VudHJ5IChuYW1lKVxuICAgICAgJ3RyYW5zY3JpcHQyJywgICAgICAgICAgICAvLyBUcmFuc2NyaXB0MiAoZmlsZSBuYW1lIGNhcHR1cmVkKVxuICAgICAgJ3QyQ291bnRyeScsICAgICAgICAgICAgICAvLyBUMl9Db3VudHJ5IChuYW1lKVxuICAgICAgJ2FkZGl0aW9uYWxEb2MxJywgICAgICAgICAvLyBBZGRpdGlvbmFsRG9jczEgKGZpbGUgbmFtZSBjYXB0dXJlZClcbiAgICAgICdhZGRpdGlvbmFsRG9jMicsICAgICAgICAgLy8gQWRkaXRpb25hbERvY3MyIChmaWxlIG5hbWUgY2FwdHVyZWQpXG4gICAgICAnX19URVJNU19DT05ESVRJT05TX18nLCAgIC8vIFRlcm1zX0NvbmRpdGlvbnMgKGZyb20gcGF5bG9hZC50ZXJtc0NvbmRpdGlvbnMpXG4gICAgICAnX19EQVRFX1NVQk1JVFRFRF9fJyAgICAgIC8vIERhdGUgU3VibWl0dGVkIChjb21wdXRlZCBoZXJlKVxuICAgIF07XG5cbiAgICAvLyBEZWJ1ZyBsb2dnaW5nIHRvIHZlcmlmeSBwYXlsb2FkIGFuZCBvcmRlcmluZyBkdXJpbmcgdHJvdWJsZXNob290aW5nXG4gICAgdHJ5IHtcbiAgICAgIGNvbnNvbGUubG9nKCdTdWJtaXQgcGF5bG9hZCBrZXlzOicsIE9iamVjdC5rZXlzKHBheWxvYWQpKTtcbiAgICAgIGNvbnNvbGUubG9nKCdOb3Rlcy9BZGRpdGlvbmFsQ29tbWVudHM6JywgcGF5bG9hZC5ub3RlcywgcGF5bG9hZC5hZGRpdGlvbmFsQ29tbWVudHMpO1xuICAgICAgY29uc29sZS5sb2coJ1Jlc29sdmVkIGZvbGRlclVybDonLCBmb2xkZXJVcmwpO1xuICAgIH0gY2F0Y2gge31cblxuICAgIGNvbnN0IHJvdyA9IG9yZGVyZWRLZXlzLm1hcChrID0+IHtcbiAgICAgIC8vIENvbHVtbiAxOiBoeXBlcmxpbmsgbGFiZWxlZCBhcyBmb2xkZXIgbmFtZSAobGFzdF9maXJzdC1kZWdyZWUtc3R1ZGVudClcbiAgICAgIGlmIChrID09PSAnX19GT0xERVJfVVJMX18nKSByZXR1cm4gZm9sZGVyVXJsID8gYnVpbGRIeXBlcmxpbmsoZm9sZGVyVXJsLCBmb2xkZXJOYW1lIHx8ICdPcGVuIEZvbGRlcicpIDogKGZvbGRlck5hbWUgfHwgJycpO1xuICAgICAgaWYgKGsgPT09ICdfX1RFUk1TX0NPTkRJVElPTlNfXycpIHtcbiAgICAgICAgY29uc3QgdiA9IHBheWxvYWQudGVybXNDb25kaXRpb25zO1xuICAgICAgICBpZiAodHlwZW9mIHYgPT09ICdib29sZWFuJykgcmV0dXJuIHYgPyAnVFJVRScgOiAnRkFMU0UnO1xuICAgICAgICBpZiAodHlwZW9mIHYgPT09ICdzdHJpbmcnKSByZXR1cm4gdi50b0xvd2VyQ2FzZSgpID09PSAndHJ1ZScgPyAnVFJVRScgOiB2LnRvTG93ZXJDYXNlKCkgPT09ICdmYWxzZScgPyAnRkFMU0UnIDogdjtcbiAgICAgICAgcmV0dXJuIHYgPz8gJyc7XG4gICAgICB9XG4gICAgICBpZiAoayA9PT0gJ19fREFURV9TVUJNSVRURURfXycpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBEYXRlKCkudG9JU09TdHJpbmcoKTtcbiAgICAgIH1cbiAgICAgIC8vIEtlZXAgTmF0aW9uYWwgQ291bnRyeSBhcyBwbGFpbiB0ZXh0XG4gICAgICBpZiAoayA9PT0gJ25hdGlvbmFsQ291bnRyeScpIHtcbiAgICAgICAgY29uc3QgY291bnRyeSA9IHBheWxvYWRba10gPz8gJyc7XG4gICAgICAgIHJldHVybiBjb3VudHJ5ID8/ICcnO1xuICAgICAgfVxuICAgICAgLy8gRmlsZXM6IG91dHB1dCByYXcgRHJpdmUgVVJMIChubyBIWVBFUkxJTksgZm9ybXVsYXMpXG4gICAgICBpZiAoayA9PT0gJ3RyYW5zY3JpcHQxJyB8fCBrID09PSAndHJhbnNjcmlwdDInIHx8IGsgPT09ICdhZGRpdGlvbmFsRG9jMScgfHwgayA9PT0gJ2FkZGl0aW9uYWxEb2MyJykge1xuICAgICAgICBjb25zdCBsaW5rID0gZmlsZVZpZXdMaW5rc1trXTtcbiAgICAgICAgY29uc3QgbmFtZSA9IGZpbGVMaW5rTGFiZWxzW2tdIHx8IHBheWxvYWRba10gfHwgJyc7XG4gICAgICAgIHJldHVybiBsaW5rIHx8IChuYW1lID8/ICcnKTtcbiAgICAgIH1cbiAgICAgIGlmIChrID09PSAnbmF0aW9uYWxJRCcpIHtcbiAgICAgICAgY29uc3QgbGluayA9IGZpbGVWaWV3TGlua3Nba107XG4gICAgICAgIGNvbnN0IG5hbWUgPSBmaWxlTGlua0xhYmVsc1trXSB8fCBwYXlsb2FkW2tdIHx8ICcnO1xuICAgICAgICByZXR1cm4gbGluayB8fCAobmFtZSA/PyAnJyk7XG4gICAgICB9XG4gICAgICBjb25zdCB2ID0gcGF5bG9hZFtrXTtcbiAgICAgIGlmICh0eXBlb2YgdiA9PT0gJ2Jvb2xlYW4nKSByZXR1cm4gdiA/ICdUUlVFJyA6ICdGQUxTRSc7XG4gICAgICByZXR1cm4gdiA/PyAnJztcbiAgICB9KTtcblxuICAgIGF3YWl0IHNoZWV0cy5zcHJlYWRzaGVldHMudmFsdWVzLmFwcGVuZCh7XG4gICAgICBzcHJlYWRzaGVldElkLFxuICAgICAgcmFuZ2U6IHJhbmdlIGFzIHN0cmluZyxcbiAgICAgIHZhbHVlSW5wdXRPcHRpb246ICdVU0VSX0VOVEVSRUQnLFxuICAgICAgaW5zZXJ0RGF0YU9wdGlvbjogJ0lOU0VSVF9ST1dTJyxcbiAgICAgIHJlcXVlc3RCb2R5OiB7IHZhbHVlczogW3Jvd10gfSxcbiAgICB9KTtcblxuICAgIHJldHVybiBuZXcgUmVzcG9uc2UoJ1NhdmVkJywgeyBzdGF0dXM6IDIwMCB9KTtcbiAgfSBjYXRjaCAoZXJyOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdTdWJtaXQgZXJyb3I6JywgZXJyKTtcbiAgICBjb25zdCBtZXNzYWdlID0gZXJyPy5tZXNzYWdlIHx8ICdTdWJtaXNzaW9uIGZhaWxlZCc7XG4gICAgcmV0dXJuIG5ldyBSZXNwb25zZShtZXNzYWdlLCB7IHN0YXR1czogNTAwIH0pO1xuICB9XG59XG5cblxuIl0sIm5hbWVzIjpbImdvb2dsZSIsIlJlYWRhYmxlIiwicnVudGltZSIsImdldEVudiIsIm5hbWUiLCJvcHRpb25hbCIsInYiLCJwcm9jZXNzIiwiZW52IiwiRXJyb3IiLCJERUZBVUxUX1BBUkVOVF9GT0xERVJfSUQiLCJub3JtYWxpemVLZXkiLCJvcmlnaW5hbEtleSIsIndpdGhvdXRTcGFjZXMiLCJyZXBsYWNlIiwiY2FtZWwiLCJfIiwiYyIsInRvVXBwZXJDYXNlIiwibG93ZXJGaXJzdCIsImNoYXJBdCIsInRvTG93ZXJDYXNlIiwic2xpY2UiLCJidWlsZEh5cGVybGluayIsInVybCIsImxhYmVsIiwic2FmZUxhYmVsIiwic2FuaXRpemVTZWdtZW50IiwidmFsdWUiLCJ0b1N0cmluZyIsInRyaW0iLCJidWlsZFN0dWRlbnRGb2xkZXJOYW1lIiwicGF5bG9hZCIsImxhc3QiLCJsYXN0TmFtZSIsImZpcnN0IiwiZmlyc3ROYW1lIiwiZGVncmVlIiwiZGVncmVlTGV2ZWwiLCJzdHVkZW50VHlwZSIsImxhc3RGaXJzdCIsImZpbHRlciIsIkJvb2xlYW4iLCJqb2luIiwiZGVncmVlQW5kVHlwZSIsImJ1aWxkU3R1ZGVudE5hbWVQcmVmaXgiLCJiYXNlIiwiZXh0cmFjdEZpbGVFeHRlbnNpb24iLCJtYXRjaCIsIlBPU1QiLCJyZXF1ZXN0IiwiZm9ybURhdGEiLCJmaWxlc0J5S2V5IiwicmF3S2V5IiwiZW50cmllcyIsImtleSIsIkZpbGUiLCJzaXplIiwiYWRkaXRpb25hbENvbW1lbnRzIiwibm90ZXMiLCJjbGllbnRFbWFpbCIsImI2NEtleSIsInByaXZhdGVLZXkiLCJCdWZmZXIiLCJmcm9tIiwiand0IiwiYXV0aCIsIkpXVCIsInVuZGVmaW5lZCIsImF1dGhvcml6ZSIsImRyaXZlUGFyZW50SWQiLCJkcml2ZSIsInZlcnNpb24iLCJjb25zb2xlIiwibG9nIiwic291cmNlIiwicGFyZW50TWV0YSIsImZpbGVzIiwiZ2V0IiwiZmlsZUlkIiwiZmllbGRzIiwic3VwcG9ydHNBbGxEcml2ZXMiLCJtaW1lVHlwZSIsImRhdGEiLCJpZCIsImRyaXZlSWQiLCJlIiwibWVzc2FnZSIsImZvbGRlck5hbWUiLCJmb2xkZXJVcmwiLCJmb2xkZXJJZCIsInJlcyIsImNyZWF0ZSIsInJlcXVlc3RCb2R5IiwicGFyZW50cyIsImNyZWF0ZWRNZXRhIiwiY3VycmVudFBhcmVudHMiLCJpbmNsdWRlcyIsInVwZGF0ZVBhcmFtcyIsImFkZFBhcmVudHMiLCJsZW5ndGgiLCJyZW1vdmVQYXJlbnRzIiwidXBkYXRlZCIsInVwZGF0ZSIsInBsYWNlbWVudEVyciIsImVycm9yIiwicGVybWlzc2lvbnMiLCJ0eXBlIiwicm9sZSIsImZpbGVWaWV3TGlua3MiLCJmaWxlTGlua0xhYmVscyIsInVwbG9hZEtleXMiLCJPYmplY3QiLCJrZXlzIiwidHlwZUxhYmVsQnlLZXkiLCJuYXRpb25hbElEIiwidHJhbnNjcmlwdDEiLCJ0cmFuc2NyaXB0MiIsImFkZGl0aW9uYWxEb2MxIiwiYWRkaXRpb25hbERvYzIiLCJzdWNjZXNzZnVsVXBsb2FkQ291bnQiLCJrIiwiZiIsImFiIiwiYXJyYXlCdWZmZXIiLCJidWZmZXIiLCJ0eXBlTGFiZWwiLCJleHQiLCJkcml2ZU5hbWUiLCJtZWRpYSIsImJvZHkiLCJzcHJlYWRzaGVldElkIiwic2hlZXRzIiwicmFuZ2UiLCJ0ZXN0IiwibWV0YSIsInNwcmVhZHNoZWV0cyIsInNoZWV0IiwidGl0bGUiLCJwcm9wZXJ0aWVzIiwib3JkZXJlZEtleXMiLCJyb3ciLCJtYXAiLCJ0ZXJtc0NvbmRpdGlvbnMiLCJEYXRlIiwidG9JU09TdHJpbmciLCJjb3VudHJ5IiwibGluayIsInZhbHVlcyIsImFwcGVuZCIsInZhbHVlSW5wdXRPcHRpb24iLCJpbnNlcnREYXRhT3B0aW9uIiwiUmVzcG9uc2UiLCJzdGF0dXMiLCJlcnIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/submit/route.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/googleapis","vendor-chunks/google-auth-library","vendor-chunks/uuid","vendor-chunks/googleapis-common","vendor-chunks/math-intrinsics","vendor-chunks/gaxios","vendor-chunks/es-errors","vendor-chunks/whatwg-url","vendor-chunks/qs","vendor-chunks/jws","vendor-chunks/call-bind-apply-helpers","vendor-chunks/debug","vendor-chunks/json-bigint","vendor-chunks/google-logging-utils","vendor-chunks/get-proto","vendor-chunks/tr46","vendor-chunks/object-inspect","vendor-chunks/https-proxy-agent","vendor-chunks/has-symbols","vendor-chunks/gopd","vendor-chunks/gcp-metadata","vendor-chunks/function-bind","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/agent-base","vendor-chunks/node-fetch","vendor-chunks/webidl-conversions","vendor-chunks/url-template","vendor-chunks/supports-color","vendor-chunks/side-channel","vendor-chunks/side-channel-weakmap","vendor-chunks/side-channel-map","vendor-chunks/side-channel-list","vendor-chunks/safe-buffer","vendor-chunks/ms","vendor-chunks/jwa","vendor-chunks/is-stream","vendor-chunks/hasown","vendor-chunks/has-flag","vendor-chunks/gtoken","vendor-chunks/get-intrinsic","vendor-chunks/extend","vendor-chunks/es-object-atoms","vendor-chunks/es-define-property","vendor-chunks/dunder-proto","vendor-chunks/call-bound","vendor-chunks/buffer-equal-constant-time","vendor-chunks/bignumber.js","vendor-chunks/base64-js"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fsubmit%2Froute&page=%2Fapi%2Fsubmit%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fsubmit%2Froute.ts&appDir=C%3A%5CProjects%5Ctranscript-uploader%5Csrc%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CProjects%5Ctranscript-uploader&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();