"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/MultiStepForm.tsx":
/*!******************************************!*\
  !*** ./src/components/MultiStepForm.tsx ***!
  \******************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ MultiStepForm; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _steps_PersonalInfoStep__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./steps/PersonalInfoStep */ \"(app-pages-browser)/./src/components/steps/PersonalInfoStep.tsx\");\n/* harmony import */ var _steps_DocumentUploadStep__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./steps/DocumentUploadStep */ \"(app-pages-browser)/./src/components/steps/DocumentUploadStep.tsx\");\n/* harmony import */ var _steps_ReviewSubmitStep__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./steps/ReviewSubmitStep */ \"(app-pages-browser)/./src/components/steps/ReviewSubmitStep.tsx\");\n/* harmony import */ var _steps_AdditionalDetailsStep__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./steps/AdditionalDetailsStep */ \"(app-pages-browser)/./src/components/steps/AdditionalDetailsStep.tsx\");\n/* harmony import */ var _steps_AdditionalDocumentsStep__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./steps/AdditionalDocumentsStep */ \"(app-pages-browser)/./src/components/steps/AdditionalDocumentsStep.tsx\");\n/* harmony import */ var _steps_FormNavigation__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./steps/FormNavigation */ \"(app-pages-browser)/./src/components/steps/FormNavigation.tsx\");\n/* harmony import */ var _steps_SuccessStep__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./steps/SuccessStep */ \"(app-pages-browser)/./src/components/steps/SuccessStep.tsx\");\n/* harmony import */ var _utils_lookupData__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../utils/lookupData */ \"(app-pages-browser)/./src/utils/lookupData.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n\n\n\n\n\n// --- Must match backend case-sensitive keys ---\nconst initialFormData = {\n    // Personal Info\n    firstName: \"\",\n    lastName: \"\",\n    middleName: \"\",\n    additionalName: \"\",\n    studentType: \"\",\n    degreeLevel: \"\",\n    gender: \"\",\n    birthDate: \"\",\n    personalEmail: \"\",\n    notes: \"\",\n    termsConditions: false,\n    // Additional Details (optional)\n    referenceNumber: \"\",\n    additionalComments: \"\",\n    // Country Data (consistent naming)\n    nationalCountry: \"\",\n    nationalCountryCode: \"\",\n    t1Country: \"\",\n    t1CountryCode: \"\",\n    t2Country: \"\",\n    t2CountryCode: \"\",\n    t3Country: \"\",\n    t3CountryCode: \"\",\n    t4Country: \"\",\n    t4CountryCode: \"\",\n    // Files (consistent naming)\n    nationalID: null,\n    transcript1: null,\n    transcript2: null,\n    transcript3: null,\n    transcript4: null,\n    // Additional Documents (optional)\n    additionalDoc1: null,\n    additionalDoc2: null\n};\nfunction MultiStepForm() {\n    _s();\n    const [step, setStep] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0);\n    const [formData, setFormData] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialFormData);\n    const stepsCount = 5;\n    const [submitting, setSubmitting] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [submitResult, setSubmitResult] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const handleChange = (updates)=>{\n        setFormData((prev)=>({\n                ...prev,\n                ...updates\n            }));\n    };\n    const handleNext = ()=>setStep((s)=>Math.min(s + 1, stepsCount - 1));\n    const handleBack = ()=>setStep((s)=>Math.max(s - 1, 0));\n    const handleSubmit = async ()=>{\n        // Pre-submit guard: require National ID and at least one Transcript\n        const hasNationalID = Boolean(formData.nationalID);\n        const hasAnyTranscript = Boolean(formData.transcript1 || formData.transcript2 || formData.transcript3 || formData.transcript4);\n        if (!hasNationalID || !hasAnyTranscript) {\n            setSubmitResult({\n                error: \"A National ID and at least one Transcript are required before submission.\"\n            });\n            return;\n        }\n        setSubmitting(true);\n        setSubmitResult(null);\n        // Helper: upload a file to Vercel Blob and return its URL\n        const uploadToBlob = async (file)=>{\n            try {\n                if (!file) return null;\n                const r = await fetch(\"/api/upload-url\", {\n                    method: \"POST\",\n                    headers: {\n                        \"content-type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        contentType: file.type || \"application/octet-stream\"\n                    })\n                });\n                if (!r.ok) throw new Error(await r.text());\n                const { uploadUrl } = await r.json();\n                const up = await fetch(uploadUrl, {\n                    method: \"PUT\",\n                    headers: {\n                        \"content-type\": file.type || \"application/octet-stream\"\n                    },\n                    body: file\n                });\n                if (!up.ok) throw new Error(await up.text());\n                const location = up.headers.get(\"Location\");\n                return location || null;\n            } catch (e) {\n                console.error(\"Blob upload failed:\", e);\n                return null; // fallback handled below\n            }\n        };\n        // Lookup code values for studentType and degreeLevel\n        const studentTypeObj = _utils_lookupData__WEBPACK_IMPORTED_MODULE_9__.studentTypes.find((st)=>st.name === formData.studentType || st.code === formData.studentType);\n        const degreeLevelObj = _utils_lookupData__WEBPACK_IMPORTED_MODULE_9__.degreeLevels.find((dl)=>dl.name === formData.degreeLevel || dl.code === formData.degreeLevel);\n        const genderObj = _utils_lookupData__WEBPACK_IMPORTED_MODULE_9__.genders.find((g)=>g.name === formData.gender || g.code === formData.gender);\n        const studentTypeCode = studentTypeObj ? studentTypeObj.code : formData.studentType;\n        const degreeLevelCode = degreeLevelObj ? degreeLevelObj.code : formData.degreeLevel;\n        const genderCode = genderObj ? genderObj.code : formData.gender;\n        // Compose the base filename\n        const baseFileName = [\n            formData.lastName,\n            formData.firstName,\n            degreeLevelCode,\n            studentTypeCode\n        ].join(\"_\").replace(/\\s+/g, \"_\").replace(/\\//g, \"_\");\n        // Compose the expected file names\n        const nationalIDFilename = \"\".concat(baseFileName, \"_\").concat(formData.nationalCountryCode, \"-ID\");\n        const transcriptFileNames = [\n            1,\n            2,\n            3,\n            4\n        ].map((num)=>formData[\"t\".concat(num, \"CountryCode\")] ? \"\".concat(baseFileName, \"_\").concat(formData[\"t\".concat(num, \"CountryCode\")], \"-T\").concat(num) : \"\");\n        // Additional documents filenames (if provided)\n        const additionalDocs1FileNames = formData.additionalDoc1 ? \"\".concat(baseFileName, \"-AD1\") : \"\";\n        const additionalDocs2FileNames = formData.additionalDoc2 ? \"\".concat(baseFileName, \"-AD2\") : \"\";\n        // Prepare the submission data\n        const submissionData = {\n            ...formData\n        };\n        // Attempt to upload files to Blob; if successful, replace file objects with URLs.\n        // If an upload fails, keep the original File object to preserve legacy behavior (may work for small files).\n        try {\n            const fileKeys = [\n                \"nationalID\",\n                \"transcript1\",\n                \"transcript2\",\n                \"transcript3\",\n                \"transcript4\",\n                \"additionalDoc1\",\n                \"additionalDoc2\"\n            ];\n            const uploads = [];\n            for (const key of fileKeys){\n                const f = formData[key];\n                if (f) {\n                    uploads.push((async ()=>{\n                        const url = await uploadToBlob(f);\n                        if (url) {\n                            submissionData[key] = url; // send URL instead of File\n                        }\n                    })());\n                }\n            }\n            await Promise.all(uploads);\n        } catch (e) {\n            console.error(\"One or more uploads failed; falling back for those files.\", e);\n        }\n        // Force codes in the payload\n        submissionData.gender = genderCode;\n        submissionData.studentType = studentTypeCode;\n        submissionData.degreeLevel = degreeLevelCode;\n        // Include folder name for backend to create outer folder and store its URL in Sheets 'Folder' column\n        submissionData.folder = baseFileName;\n        submissionData.nationalIDFilename = nationalIDFilename;\n        submissionData.transcript1Filename = transcriptFileNames[0];\n        submissionData.transcript2Filename = transcriptFileNames[1];\n        submissionData.additionalDocs1Filename = additionalDocs1FileNames;\n        submissionData.additionalDocs2Filename = additionalDocs2FileNames;\n        // Ensure additionalComments mirrors notes only when notes has content\n        if (submissionData.notes && String(submissionData.notes).trim() !== \"\") {\n            submissionData.additionalComments = submissionData.notes;\n        }\n        // Prepare the FormData\n        const data = new FormData();\n        // Ensure the first column in Google Sheets maps to the folder URL.\n        // Backend should create the folder and overwrite this placeholder with the actual URL.\n        data.append(\"FolderUrl\", baseFileName);\n        Object.entries(submissionData).forEach((param)=>{\n            let [key, value] = param;\n            // Only append non-empty values\n            if (value !== null && value !== undefined && value !== \"\" && // If it's a File, skip appending empty files\n            (!(value instanceof File) || value.size > 0)) {\n                data.append(key, value);\n            }\n        });\n        // Logging for debug\n        for (let [k, v] of data.entries()){\n            console.log(\"FormData:\", k, v, typeof v, v instanceof File ? v.name : \"\");\n        }\n        try {\n            const response = await fetch(\"/api/submit\", {\n                method: \"POST\",\n                body: data\n            });\n            const resultText = await response.text();\n            if (!response.ok) {\n                throw new Error(resultText || \"Submission failed with no error message.\");\n            }\n            setSubmitResult({\n                success: resultText || \"Your application has been submitted successfully!\"\n            });\n        } catch (err) {\n            console.error(\"Submission Error:\", err);\n            setSubmitResult({\n                error: err.message || \"An unexpected network error occurred.\"\n            });\n        } finally{\n            setSubmitting(false);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"m-10 p-10 max-w-2xl w-full border rounded-2xl\",\n        children: (submitResult === null || submitResult === void 0 ? void 0 : submitResult.success) ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_SuccessStep__WEBPACK_IMPORTED_MODULE_8__[\"default\"], {}, void 0, false, {\n            fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n            lineNumber: 224,\n            columnNumber: 9\n        }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n            children: [\n                (()=>{\n                    const isStepValid = (currentStep)=>{\n                        // step indices: 0..4\n                        if (currentStep === 0) {\n                            // Personal Info required fields\n                            return Boolean(formData.firstName && formData.lastName && formData.studentType && formData.degreeLevel && formData.gender && formData.birthDate && formData.personalEmail);\n                        }\n                        if (currentStep === 1) {\n                            // ID Upload required fields\n                            return Boolean(formData.nationalID && formData.nationalCountryCode);\n                        }\n                        if (currentStep === 2) {\n                            // Transcript Upload required fields: transcript1 + t1 country\n                            return Boolean(formData.transcript1 && formData.t1CountryCode);\n                        }\n                        if (currentStep === 3) {\n                            // Additional Documents: no required fields\n                            return true;\n                        }\n                        // Review step - Next not shown\n                        return true;\n                    };\n                    const canProceed = isStepValid(step);\n                    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {}, void 0, false);\n                })(),\n                step === 0 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_PersonalInfoStep__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                    form: formData,\n                    updateForm: handleChange,\n                    onNext: handleNext,\n                    step: 1\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n                    lineNumber: 265,\n                    columnNumber: 13\n                }, this),\n                step === 1 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_DocumentUploadStep__WEBPACK_IMPORTED_MODULE_3__[\"default\"], {\n                    form: formData,\n                    updateForm: handleChange,\n                    onNext: handleNext,\n                    onBack: handleBack,\n                    step: 2\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n                    lineNumber: 268,\n                    columnNumber: 13\n                }, this),\n                step === 2 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_AdditionalDetailsStep__WEBPACK_IMPORTED_MODULE_5__[\"default\"], {\n                    form: formData,\n                    updateForm: handleChange,\n                    onNext: handleNext,\n                    onBack: handleBack,\n                    step: 3\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n                    lineNumber: 271,\n                    columnNumber: 13\n                }, this),\n                step === 3 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_AdditionalDocumentsStep__WEBPACK_IMPORTED_MODULE_6__[\"default\"], {\n                    form: formData,\n                    updateForm: handleChange,\n                    onNext: handleNext,\n                    onBack: handleBack,\n                    step: 4\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n                    lineNumber: 274,\n                    columnNumber: 13\n                }, this),\n                step === 4 && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_ReviewSubmitStep__WEBPACK_IMPORTED_MODULE_4__[\"default\"], {\n                    form: formData,\n                    updateForm: handleChange,\n                    onBack: handleBack,\n                    onSubmit: handleSubmit,\n                    step: 5,\n                    submitting: submitting,\n                    submitResult: submitResult\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n                    lineNumber: 277,\n                    columnNumber: 13\n                }, this),\n                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_steps_FormNavigation__WEBPACK_IMPORTED_MODULE_7__[\"default\"], {\n                    step: step,\n                    stepsCount: stepsCount,\n                    nextStep: handleNext,\n                    prevStep: handleBack,\n                    handleSubmit: handleSubmit,\n                    formData: formData,\n                    submitting: submitting,\n                    canProceed: function() {\n                        const isStepValid = (currentStep)=>{\n                            if (currentStep === 0) {\n                                return Boolean(formData.firstName && formData.lastName && formData.studentType && formData.degreeLevel && formData.gender && formData.birthDate && formData.personalEmail);\n                            }\n                            if (currentStep === 1) {\n                                return Boolean(formData.nationalID && formData.nationalCountryCode);\n                            }\n                            if (currentStep === 2) {\n                                return Boolean(formData.transcript1 && formData.t1CountryCode);\n                            }\n                            if (currentStep === 3) {\n                                return true;\n                            }\n                            return true;\n                        };\n                        return isStepValid(step);\n                    }()\n                }, void 0, false, {\n                    fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n                    lineNumber: 288,\n                    columnNumber: 11\n                }, this)\n            ]\n        }, void 0, true)\n    }, void 0, false, {\n        fileName: \"C:\\\\Projects\\\\transcript-uploader\\\\src\\\\components\\\\MultiStepForm.tsx\",\n        lineNumber: 222,\n        columnNumber: 5\n    }, this);\n}\n_s(MultiStepForm, \"vF1hFofHDGL3Iqbr01mSk590ljQ=\");\n_c = MultiStepForm;\nvar _c;\n$RefreshReg$(_c, \"MultiStepForm\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL011bHRpU3RlcEZvcm0udHN4IiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQ2lDO0FBQ3dCO0FBQ0k7QUFDSjtBQUNVO0FBQ0c7QUFDbEI7QUFDTjtBQUM0QjtBQUcxRSxpREFBaUQ7QUFDakQsTUFBTVcsa0JBQWtCO0lBQ3RCLGdCQUFnQjtJQUNoQkMsV0FBVztJQUNYQyxVQUFVO0lBQ1ZDLFlBQVk7SUFDWkMsZ0JBQWdCO0lBQ2hCQyxhQUFhO0lBQ2JDLGFBQWE7SUFDYkMsUUFBUTtJQUNSQyxXQUFXO0lBQ1hDLGVBQWU7SUFDZkMsT0FBTztJQUNQQyxpQkFBaUI7SUFDakIsZ0NBQWdDO0lBQ2hDQyxpQkFBaUI7SUFDakJDLG9CQUFvQjtJQUNwQixtQ0FBbUM7SUFDbkNDLGlCQUFpQjtJQUNqQkMscUJBQXFCO0lBQ3JCQyxXQUFXO0lBQ1hDLGVBQWU7SUFDZkMsV0FBVztJQUNYQyxlQUFlO0lBQ2ZDLFdBQVc7SUFDWEMsZUFBZTtJQUNmQyxXQUFXO0lBQ1hDLGVBQWU7SUFDZiw0QkFBNEI7SUFDNUJDLFlBQVk7SUFDWkMsYUFBYTtJQUNiQyxhQUFhO0lBQ2JDLGFBQWE7SUFDYkMsYUFBYTtJQUNiLGtDQUFrQztJQUNsQ0MsZ0JBQWdCO0lBQ2hCQyxnQkFBZ0I7QUFDbEI7QUFFZSxTQUFTQzs7SUFDdEIsTUFBTSxDQUFDQyxNQUFNQyxRQUFRLEdBQUc1QywrQ0FBUUEsQ0FBQztJQUNqQyxNQUFNLENBQUM2QyxVQUFVQyxZQUFZLEdBQUc5QywrQ0FBUUEsQ0FBQ1c7SUFDekMsTUFBTW9DLGFBQWE7SUFFbkIsTUFBTSxDQUFDQyxZQUFZQyxjQUFjLEdBQUdqRCwrQ0FBUUEsQ0FBQztJQUM3QyxNQUFNLENBQUNrRCxjQUFjQyxnQkFBZ0IsR0FBR25ELCtDQUFRQSxDQUE4QztJQUU5RixNQUFNb0QsZUFBZSxDQUFDQztRQUNwQlAsWUFBWVEsQ0FBQUEsT0FBUztnQkFBRSxHQUFHQSxJQUFJ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QUNuQixJQUFJQSxnQkFBZ0IsR0FBRztnQ0FDckIsT0FBT2xGLFFBQ0xsQixTQUFTakMsU0FBUyxJQUNsQmlDLFNBQVNoQyxRQUFRLElBQ2pCZ0MsU0FBUzdCLFdBQVcsSUFDcEI2QixTQUFTNUIsV0FBVyxJQUNwQjRCLFNBQVMzQixNQUFNLElBQ2YyQixTQUFTMUIsU0FBUyxJQUNsQjBCLFNBQVN6QixhQUFhOzRCQUUxQjs0QkFDQSxJQUFJNkgsZ0JBQWdCLEdBQUc7Z0NBQ3JCLE9BQU9sRixRQUFRbEIsU0FBU1YsVUFBVSxJQUFJVSxTQUFTbkIsbUJBQW1COzRCQUNwRTs0QkFDQSxJQUFJdUgsZ0JBQWdCLEdBQUc7Z0NBQ3JCLE9BQU9sRixRQUFRbEIsU0FBU1QsV0FBVyxJQUFJUyxTQUFTakIsYUFBYTs0QkFDL0Q7NEJBQ0EsSUFBSXFILGdCQUFnQixHQUFHO2dDQUNyQixPQUFPOzRCQUNUOzRCQUNBLE9BQU87d0JBQ1Q7d0JBQ0EsT0FBT0QsWUFBWXJHO29CQUNyQjs7Ozs7Ozs7Ozs7OztBQU1aO0dBblJ3QkQ7S0FBQUEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvTXVsdGlTdGVwRm9ybS50c3g/NGY1YyJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIGNsaWVudCc7XG5pbXBvcnQgeyB1c2VTdGF0ZSB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IFN0ZXAxUGVyc29uYWxJbmZvIGZyb20gXCIuL3N0ZXBzL1BlcnNvbmFsSW5mb1N0ZXBcIjtcbmltcG9ydCBTdGVwMkRvY3VtZW50VXBsb2FkIGZyb20gXCIuL3N0ZXBzL0RvY3VtZW50VXBsb2FkU3RlcFwiO1xuaW1wb3J0IFN0ZXAzUmV2aWV3U3VibWl0IGZyb20gXCIuL3N0ZXBzL1Jldmlld1N1Ym1pdFN0ZXBcIjtcbmltcG9ydCBTdGVwM0FkZGl0aW9uYWxEZXRhaWxzIGZyb20gXCIuL3N0ZXBzL0FkZGl0aW9uYWxEZXRhaWxzU3RlcFwiO1xuaW1wb3J0IEFkZGl0aW9uYWxEb2N1bWVudHNTdGVwIGZyb20gXCIuL3N0ZXBzL0FkZGl0aW9uYWxEb2N1bWVudHNTdGVwXCI7XG5pbXBvcnQgRm9ybU5hdmlnYXRpb24gZnJvbSBcIi4vc3RlcHMvRm9ybU5hdmlnYXRpb25cIjtcbmltcG9ydCBTdWNjZXNzU3RlcCBmcm9tIFwiLi9zdGVwcy9TdWNjZXNzU3RlcFwiO1xuaW1wb3J0IHsgc3R1ZGVudFR5cGVzLCBkZWdyZWVMZXZlbHMsIGdlbmRlcnMgfSBmcm9tIFwiLi4vdXRpbHMvbG9va3VwRGF0YVwiO1xuXG5cbi8vIC0tLSBNdXN0IG1hdGNoIGJhY2tlbmQgY2FzZS1zZW5zaXRpdmUga2V5cyAtLS1cbmNvbnN0IGluaXRpYWxGb3JtRGF0YSA9IHtcbiAgLy8gUGVyc29uYWwgSW5mb1xuICBmaXJzdE5hbWU6IFwiXCIsXG4gIGxhc3ROYW1lOiBcIlwiLFxuICBtaWRkbGVOYW1lOiBcIlwiLFxuICBhZGRpdGlvbmFsTmFtZTogXCJcIixcbiAgc3R1ZGVudFR5cGU6IFwiXCIsXG4gIGRlZ3JlZUxldmVsOiBcIlwiLFxuICBnZW5kZXI6IFwiXCIsXG4gIGJpcnRoRGF0ZTogXCJcIixcbiAgcGVyc29uYWxFbWFpbDogXCJcIixcbiAgbm90ZXM6IFwiXCIsXG4gIHRlcm1zQ29uZGl0aW9uczogZmFsc2UsXG4gIC8vIEFkZGl0aW9uYWwgRGV0YWlscyAob3B0aW9uYWwpXG4gIHJlZmVyZW5jZU51bWJlcjogXCJcIixcbiAgYWRkaXRpb25hbENvbW1lbnRzOiBcIlwiLFxuICAvLyBDb3VudHJ5IERhdGEgKGNvbnNpc3RlbnQgbmFtaW5nKVxuICBuYXRpb25hbENvdW50cnk6IFwiXCIsXG4gIG5hdGlvbmFsQ291bnRyeUNvZGU6IFwiXCIsXG4gIHQxQ291bnRyeTogXCJcIixcbiAgdDFDb3VudHJ5Q29kZTogXCJcIixcbiAgdDJDb3VudHJ5OiBcIlwiLFxuICB0MkNvdW50cnlDb2RlOiBcIlwiLFxuICB0M0NvdW50cnk6IFwiXCIsXG4gIHQzQ291bnRyeUNvZGU6IFwiXCIsXG4gIHQ0Q291bnRyeTogXCJcIixcbiAgdDRDb3VudHJ5Q29kZTogXCJcIixcbiAgLy8gRmlsZXMgKGNvbnNpc3RlbnQgbmFtaW5nKVxuICBuYXRpb25hbElEOiBudWxsLFxuICB0cmFuc2NyaXB0MTogbnVsbCxcbiAgdHJhbnNjcmlwdDI6IG51bGwsXG4gIHRyYW5zY3JpcHQzOiBudWxsLFxuICB0cmFuc2NyaXB0NDogbnVsbCxcbiAgLy8gQWRkaXRpb25hbCBEb2N1bWVudHMgKG9wdGlvbmFsKVxuICBhZGRpdGlvbmFsRG9jMTogbnVsbCxcbiAgYWRkaXRpb25hbERvYzI6IG51bGwsXG59O1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBNdWx0aVN0ZXBGb3JtKCkge1xuICBjb25zdCBbc3RlcCwgc2V0U3RlcF0gPSB1c2VTdGF0ZSgwKTtcbiAgY29uc3QgW2Zvcm1EYXRhLCBzZXRGb3JtRGF0YV0gPSB1c2VTdGF0ZShpbml0aWFsRm9ybURhdGEpO1xuICBjb25zdCBzdGVwc0NvdW50ID0gNTtcblxuICBjb25zdCBbc3VibWl0dGluZywgc2V0U3VibWl0dGluZ10gPSB1c2VTdGF0ZShmYWxzZSk7XG4gIGNvbnN0IFtzdWJtaXRSZXN1bHQsIHNldFN1Ym1pdFJlc3VsdF0gPSB1c2VTdGF0ZTx7IGVycm9yPzogc3RyaW5nOyBzdWNjZXNzPzogc3RyaW5nIH0gfCBudWxsPihudWxsKTtcblxuICBjb25zdCBoYW5kbGVDaGFuZ2UgPSAodXBkYXRlczogYW55KSA9PiB7XG4gICAgc2V0Rm9ybURhdGEocHJldiA9PiAoeyAuLi5wcmV2LCAuLi51cGRhdGVzIH0pKTtcbiAgfTtcblxuICBjb25zdCBoYW5kbGVOZXh0ID0gKCkgPT4gc2V0U3RlcChzID0+IE1hdGgubWluKHMgKyAxLCBzdGVwc0NvdW50IC0gMSkpO1xuICBjb25zdCBoYW5kbGVCYWNrID0gKCkgPT4gc2V0U3RlcChzID0+IE1hdGgubWF4KHMgLSAxLCAwKSk7XG5cbiAgY29uc3QgaGFuZGxlU3VibWl0ID0gYXN5bmMgKCkgPT4ge1xuICAvLyBQcmUtc3VibWl0IGd1YXJkOiByZXF1aXJlIE5hdGlvbmFsIElEIGFuZCBhdCBsZWFzdCBvbmUgVHJhbnNjcmlwdFxuICBjb25zdCBoYXNOYXRpb25hbElEID0gQm9vbGVhbihmb3JtRGF0YS5uYXRpb25hbElEKTtcbiAgY29uc3QgaGFzQW55VHJhbnNjcmlwdCA9IEJvb2xlYW4oZm9ybURhdGEudHJhbnNjcmlwdDEgfHwgZm9ybURhdGEudHJhbnNjcmlwdDIgfHwgZm9ybURhdGEudHJhbnNjcmlwdDMgfHwgZm9ybURhdGEudHJhbnNjcmlwdDQpO1xuICBpZiAoIWhhc05hdGlvbmFsSUQgfHwgIWhhc0FueVRyYW5zY3JpcHQpIHtcbiAgICBzZXRTdWJtaXRSZXN1bHQoeyBlcnJvcjogXCJBIE5hdGlvbmFsIElEIGFuZCBhdCBsZWFzdCBvbmUgVHJhbnNjcmlwdCBhcmUgcmVxdWlyZWQgYmVmb3JlIHN1Ym1pc3Npb24uXCIgfSk7XG4gICAgcmV0dXJuO1xuICB9XG5cbiAgc2V0U3VibWl0dGluZyh0cnVlKTtcbiAgc2V0U3VibWl0UmVzdWx0KG51bGwpO1xuXG4gIC8vIEhlbHBlcjogdXBsb2FkIGEgZmlsZSB0byBWZXJjZWwgQmxvYiBhbmQgcmV0dXJuIGl0cyBVUkxcbiAgY29uc3QgdXBsb2FkVG9CbG9iID0gYXN5bmMgKGZpbGU6IEZpbGUgfCBudWxsIHwgdW5kZWZpbmVkKTogUHJvbWlzZTxzdHJpbmcgfCBudWxsPiA9PiB7XG4gICAgdHJ5IHtcbiAgICAgIGlmICghZmlsZSkgcmV0dXJuIG51bGw7XG4gICAgICBjb25zdCByID0gYXdhaXQgZmV0Y2goJy9hcGkvdXBsb2FkLXVybCcsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJyB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7IGNvbnRlbnRUeXBlOiAoZmlsZSBhcyBhbnkpLnR5cGUgfHwgJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbScgfSksXG4gICAgICB9KTtcbiAgICAgIGlmICghci5vaykgdGhyb3cgbmV3IEVycm9yKGF3YWl0IHIudGV4dCgpKTtcbiAgICAgIGNvbnN0IHsgdXBsb2FkVXJsIH0gPSBhd2FpdCByLmpzb24oKTtcbiAgICAgIGNvbnN0IHVwID0gYXdhaXQgZmV0Y2godXBsb2FkVXJsLCB7XG4gICAgICAgIG1ldGhvZDogJ1BVVCcsXG4gICAgICAgIGhlYWRlcnM6IHsgJ2NvbnRlbnQtdHlwZSc6IChmaWxlIGFzIGFueSkudHlwZSB8fCAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJyB9LFxuICAgICAgICBib2R5OiBmaWxlLFxuICAgICAgfSk7XG4gICAgICBpZiAoIXVwLm9rKSB0aHJvdyBuZXcgRXJyb3IoYXdhaXQgdXAudGV4dCgpKTtcbiAgICAgIGNvbnN0IGxvY2F0aW9uID0gdXAuaGVhZGVycy5nZXQoJ0xvY2F0aW9uJyk7XG4gICAgICByZXR1cm4gbG9jYXRpb24gfHwgbnVsbDtcbiAgICB9IGNhdGNoIChlKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdCbG9iIHVwbG9hZCBmYWlsZWQ6JywgZSk7XG4gICAgICByZXR1cm4gbnVsbDsgLy8gZmFsbGJhY2sgaGFuZGxlZCBiZWxvd1xuICAgIH1cbiAgfTtcblxuICAvLyBMb29rdXAgY29kZSB2YWx1ZXMgZm9yIHN0dWRlbnRUeXBlIGFuZCBkZWdyZWVMZXZlbFxuICBjb25zdCBzdHVkZW50VHlwZU9iaiA9IHN0dWRlbnRUeXBlcy5maW5kKHN0ID0+IHN0Lm5hbWUgPT09IGZvcm1EYXRhLnN0dWRlbnRUeXBlIHx8IHN0LmNvZGUgPT09IGZvcm1EYXRhLnN0dWRlbnRUeXBlKTtcbiAgY29uc3QgZGVncmVlTGV2ZWxPYmogPSBkZWdyZWVMZXZlbHMuZmluZChkbCA9PiBkbC5uYW1lID09PSBmb3JtRGF0YS5kZWdyZWVMZXZlbCB8fCBkbC5jb2RlID09PSBmb3JtRGF0YS5kZWdyZWVMZXZlbCk7XG4gIGNvbnN0IGdlbmRlck9iaiA9IGdlbmRlcnMuZmluZChnID0+IGcubmFtZSA9PT0gZm9ybURhdGEuZ2VuZGVyIHx8IGcuY29kZSA9PT0gZm9ybURhdGEuZ2VuZGVyKTtcblxuICBjb25zdCBzdHVkZW50VHlwZUNvZGUgPSBzdHVkZW50VHlwZU9iaiA/IHN0dWRlbnRUeXBlT2JqLmNvZGUgOiBmb3JtRGF0YS5zdHVkZW50VHlwZTtcbiAgY29uc3QgZGVncmVlTGV2ZWxDb2RlID0gZGVncmVlTGV2ZWxPYmogPyBkZWdyZWVMZXZlbE9iai5jb2RlIDogZm9ybURhdGEuZGVncmVlTGV2ZWw7XG4gIGNvbnN0IGdlbmRlckNvZGUgPSBnZW5kZXJPYmogPyBnZW5kZXJPYmouY29kZSA6IGZvcm1EYXRhLmdlbmRlcjtcblxuICAvLyBDb21wb3NlIHRoZSBiYXNlIGZpbGVuYW1lXG4gIGNvbnN0IGJhc2VGaWxlTmFtZSA9IFtcbiAgICBmb3JtRGF0YS5sYXN0TmFtZSxcbiAgICBmb3JtRGF0YS5maXJzdE5hbWUsXG4gICAgZGVncmVlTGV2ZWxDb2RlLFxuICAgIHN0dWRlbnRUeXBlQ29kZSxcbiAgXS5qb2luKCdfJykucmVwbGFjZSgvXFxzKy9nLCAnXycpLnJlcGxhY2UoL1xcLy9nLCAnXycpO1xuXG4gIC8vIENvbXBvc2UgdGhlIGV4cGVjdGVkIGZpbGUgbmFtZXNcbiAgY29uc3QgbmF0aW9uYWxJREZpbGVuYW1lID0gYCR7YmFzZUZpbGVOYW1lfV8ke2Zvcm1EYXRhLm5hdGlvbmFsQ291bnRyeUNvZGV9LUlEYDtcbiAgY29uc3QgdHJhbnNjcmlwdEZpbGVOYW1lcyA9IFsxLDIsMyw0XS5tYXAobnVtID0+XG4gICAgKGZvcm1EYXRhIGFzIGFueSlbYHQke251bX1Db3VudHJ5Q29kZWBdXG4gICAgICA/IGAke2Jhc2VGaWxlTmFtZX1fJHsoZm9ybURhdGEgYXMgYW55KVtgdCR7bnVtfUNvdW50cnlDb2RlYF19LVQke251bX1gXG4gICAgICA6ICcnXG4gICk7XG4gIC8vIEFkZGl0aW9uYWwgZG9jdW1lbnRzIGZpbGVuYW1lcyAoaWYgcHJvdmlkZWQpXG4gIGNvbnN0IGFkZGl0aW9uYWxEb2NzMUZpbGVOYW1lcyA9IChmb3JtRGF0YSBhcyBhbnkpLmFkZGl0aW9uYWxEb2MxID8gYCR7YmFzZUZpbGVOYW1lfS1BRDFgIDogJyc7XG4gIGNvbnN0IGFkZGl0aW9uYWxEb2NzMkZpbGVOYW1lcyA9IChmb3JtRGF0YSBhcyBhbnkpLmFkZGl0aW9uYWxEb2MyID8gYCR7YmFzZUZpbGVOYW1lfS1BRDJgIDogJyc7XG5cbiAgLy8gUHJlcGFyZSB0aGUgc3VibWlzc2lvbiBkYXRhXG4gIGNvbnN0IHN1Ym1pc3Npb25EYXRhOiB7IFtrZXk6IHN0cmluZ106IGFueSB9ID0geyAuLi5mb3JtRGF0YSB9O1xuXG4gIC8vIEF0dGVtcHQgdG8gdXBsb2FkIGZpbGVzIHRvIEJsb2I7IGlmIHN1Y2Nlc3NmdWwsIHJlcGxhY2UgZmlsZSBvYmplY3RzIHdpdGggVVJMcy5cbiAgLy8gSWYgYW4gdXBsb2FkIGZhaWxzLCBrZWVwIHRoZSBvcmlnaW5hbCBGaWxlIG9iamVjdCB0byBwcmVzZXJ2ZSBsZWdhY3kgYmVoYXZpb3IgKG1heSB3b3JrIGZvciBzbWFsbCBmaWxlcykuXG4gIHRyeSB7XG4gICAgY29uc3QgZmlsZUtleXMgPSBbJ25hdGlvbmFsSUQnLCAndHJhbnNjcmlwdDEnLCAndHJhbnNjcmlwdDInLCAndHJhbnNjcmlwdDMnLCAndHJhbnNjcmlwdDQnLCAnYWRkaXRpb25hbERvYzEnLCAnYWRkaXRpb25hbERvYzInXSBhcyBjb25zdDtcbiAgICBjb25zdCB1cGxvYWRzOiBBcnJheTxQcm9taXNlPHZvaWQ+PiA9IFtdO1xuICAgIGZvciAoY29uc3Qga2V5IG9mIGZpbGVLZXlzKSB7XG4gICAgICBjb25zdCBmID0gKGZvcm1EYXRhIGFzIGFueSlba2V5XSBhcyBGaWxlIHwgbnVsbCB8IHVuZGVmaW5lZDtcbiAgICAgIGlmIChmKSB7XG4gICAgICAgIHVwbG9hZHMucHVzaChcbiAgICAgICAgICAoYXN5bmMgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdXJsID0gYXdhaXQgdXBsb2FkVG9CbG9iKGYpO1xuICAgICAgICAgICAgaWYgKHVybCkge1xuICAgICAgICAgICAgICBzdWJtaXNzaW9uRGF0YVtrZXldID0gdXJsOyAvLyBzZW5kIFVSTCBpbnN0ZWFkIG9mIEZpbGVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KSgpXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuICAgIGF3YWl0IFByb21pc2UuYWxsKHVwbG9hZHMpO1xuICB9IGNhdGNoIChlKSB7XG4gICAgY29uc29sZS5lcnJvcignT25lIG9yIG1vcmUgdXBsb2FkcyBmYWlsZWQ7IGZhbGxpbmcgYmFjayBmb3IgdGhvc2UgZmlsZXMuJywgZSk7XG4gIH1cblxuICAvLyBGb3JjZSBjb2RlcyBpbiB0aGUgcGF5bG9hZFxuICBzdWJtaXNzaW9uRGF0YS5nZW5kZXIgPSBnZW5kZXJDb2RlO1xuICBzdWJtaXNzaW9uRGF0YS5zdHVkZW50VHlwZSA9IHN0dWRlbnRUeXBlQ29kZTtcbiAgc3VibWlzc2lvbkRhdGEuZGVncmVlTGV2ZWwgPSBkZWdyZWVMZXZlbENvZGU7XG4gIC8vIEluY2x1ZGUgZm9sZGVyIG5hbWUgZm9yIGJhY2tlbmQgdG8gY3JlYXRlIG91dGVyIGZvbGRlciBhbmQgc3RvcmUgaXRzIFVSTCBpbiBTaGVldHMgJ0ZvbGRlcicgY29sdW1uXG4gIHN1Ym1pc3Npb25EYXRhLmZvbGRlciA9IGJhc2VGaWxlTmFtZTtcbiAgc3VibWlzc2lvbkRhdGEubmF0aW9uYWxJREZpbGVuYW1lID0gbmF0aW9uYWxJREZpbGVuYW1lO1xuICBzdWJtaXNzaW9uRGF0YS50cmFuc2NyaXB0MUZpbGVuYW1lID0gdHJhbnNjcmlwdEZpbGVOYW1lc1swXTtcbiAgc3VibWlzc2lvbkRhdGEudHJhbnNjcmlwdDJGaWxlbmFtZSA9IHRyYW5zY3JpcHRGaWxlTmFtZXNbMV07XG4gIHN1Ym1pc3Npb25EYXRhLmFkZGl0aW9uYWxEb2NzMUZpbGVuYW1lID0gYWRkaXRpb25hbERvY3MxRmlsZU5hbWVzO1xuICBzdWJtaXNzaW9uRGF0YS5hZGRpdGlvbmFsRG9jczJGaWxlbmFtZSA9IGFkZGl0aW9uYWxEb2NzMkZpbGVOYW1lcztcbiBcbiAgLy8gRW5zdXJlIGFkZGl0aW9uYWxDb21tZW50cyBtaXJyb3JzIG5vdGVzIG9ubHkgd2hlbiBub3RlcyBoYXMgY29udGVudFxuICBpZiAoc3VibWlzc2lvbkRhdGEubm90ZXMgJiYgU3RyaW5nKHN1Ym1pc3Npb25EYXRhLm5vdGVzKS50cmltKCkgIT09ICcnKSB7XG4gICAgc3VibWlzc2lvbkRhdGEuYWRkaXRpb25hbENvbW1lbnRzID0gc3VibWlzc2lvbkRhdGEubm90ZXM7XG4gIH1cblxuXG4gIC8vIFByZXBhcmUgdGhlIEZvcm1EYXRhXG4gIGNvbnN0IGRhdGEgPSBuZXcgRm9ybURhdGEoKTtcbiAgLy8gRW5zdXJlIHRoZSBmaXJzdCBjb2x1bW4gaW4gR29vZ2xlIFNoZWV0cyBtYXBzIHRvIHRoZSBmb2xkZXIgVVJMLlxuICAvLyBCYWNrZW5kIHNob3VsZCBjcmVhdGUgdGhlIGZvbGRlciBhbmQgb3ZlcndyaXRlIHRoaXMgcGxhY2Vob2xkZXIgd2l0aCB0aGUgYWN0dWFsIFVSTC5cbiAgZGF0YS5hcHBlbmQoJ0ZvbGRlclVybCcsIGJhc2VGaWxlTmFtZSk7XG4gIE9iamVjdC5lbnRyaWVzKHN1Ym1pc3Npb25EYXRhKS5mb3JFYWNoKChba2V5LCB2YWx1ZV0pID0+IHtcbiAgICAvLyBPbmx5IGFwcGVuZCBub24tZW1wdHkgdmFsdWVzXG4gICAgaWYgKFxuICAgICAgdmFsdWUgIT09IG51bGwgJiZcbiAgICAgIHZhbHVlICE9PSB1bmRlZmluZWQgJiZcbiAgICAgIHZhbHVlICE9PSBcIlwiICYmXG4gICAgICAvLyBJZiBpdCdzIGEgRmlsZSwgc2tpcCBhcHBlbmRpbmcgZW1wdHkgZmlsZXNcbiAgICAgICghKHZhbHVlIGluc3RhbmNlb2YgRmlsZSkgfHwgdmFsdWUuc2l6ZSA+IDApXG4gICAgKSB7XG4gICAgICBkYXRhLmFwcGVuZChrZXksIHZhbHVlKTtcbiAgICB9XG4gIH0pO1xuXG4gIC8vIExvZ2dpbmcgZm9yIGRlYnVnXG4gIGZvciAobGV0IFtrLCB2XSBvZiBkYXRhLmVudHJpZXMoKSkge1xuICAgIGNvbnNvbGUubG9nKFwiRm9ybURhdGE6XCIsIGssIHYsIHR5cGVvZiB2LCB2IGluc3RhbmNlb2YgRmlsZSA/IHYubmFtZSA6ICcnKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChcbiAgICAgIFwiL2FwaS9zdWJtaXRcIixcbiAgICAgIHsgbWV0aG9kOiBcIlBPU1RcIiwgYm9keTogZGF0YSB9XG4gICAgKTtcbiAgICBjb25zdCByZXN1bHRUZXh0ID0gYXdhaXQgcmVzcG9uc2UudGV4dCgpO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKHJlc3VsdFRleHQgfHwgXCJTdWJtaXNzaW9uIGZhaWxlZCB3aXRoIG5vIGVycm9yIG1lc3NhZ2UuXCIpO1xuICAgIH1cblxuICAgIHNldFN1Ym1pdFJlc3VsdCh7IHN1Y2Nlc3M6IHJlc3VsdFRleHQgfHwgXCJZb3VyIGFwcGxpY2F0aW9uIGhhcyBiZWVuIHN1Ym1pdHRlZCBzdWNjZXNzZnVsbHkhXCIgfSk7XG4gIH0gY2F0Y2ggKGVycjogYW55KSB7XG4gICAgY29uc29sZS5lcnJvcihcIlN1Ym1pc3Npb24gRXJyb3I6XCIsIGVycik7XG4gICAgc2V0U3VibWl0UmVzdWx0KHsgZXJyb3I6IGVyci5tZXNzYWdlIHx8IFwiQW4gdW5leHBlY3RlZCBuZXR3b3JrIGVycm9yIG9jY3VycmVkLlwiIH0pO1xuICB9IGZpbmFsbHkge1xuICAgIHNldFN1Ym1pdHRpbmcoZmFsc2UpO1xuICB9XG59O1xuXG5cblxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPVwibS0xMCBwLTEwIG1heC13LTJ4bCB3LWZ1bGwgYm9yZGVyIHJvdW5kZWQtMnhsXCI+XG4gICAgICB7c3VibWl0UmVzdWx0Py5zdWNjZXNzID8gKFxuICAgICAgICA8U3VjY2Vzc1N0ZXAgLz5cbiAgICAgICkgOiAoXG4gICAgICAgIDw+XG4gICAgICAgICAgey8qIFN0ZXAtbGV2ZWwgdmFsaWRhdGlvbiAqL31cbiAgICAgICAgICB7LyoqIENvbXB1dGUgd2hldGhlciBjdXJyZW50IHN0ZXAgaXMgdmFsaWQgdG8gZW5hYmxlIE5leHQgYnV0dG9uICovfVxuICAgICAgICAgIHsoKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgaXNTdGVwVmFsaWQgPSAoY3VycmVudFN0ZXA6IG51bWJlcik6IGJvb2xlYW4gPT4ge1xuICAgICAgICAgICAgICAvLyBzdGVwIGluZGljZXM6IDAuLjRcbiAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGVwID09PSAwKSB7XG4gICAgICAgICAgICAgICAgLy8gUGVyc29uYWwgSW5mbyByZXF1aXJlZCBmaWVsZHNcbiAgICAgICAgICAgICAgICByZXR1cm4gQm9vbGVhbihcbiAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLmZpcnN0TmFtZSAmJlxuICAgICAgICAgICAgICAgICAgZm9ybURhdGEubGFzdE5hbWUgJiZcbiAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLnN0dWRlbnRUeXBlICYmXG4gICAgICAgICAgICAgICAgICBmb3JtRGF0YS5kZWdyZWVMZXZlbCAmJlxuICAgICAgICAgICAgICAgICAgZm9ybURhdGEuZ2VuZGVyICYmXG4gICAgICAgICAgICAgICAgICBmb3JtRGF0YS5iaXJ0aERhdGUgJiZcbiAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLnBlcnNvbmFsRW1haWxcbiAgICAgICAgICAgICAgICApO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChjdXJyZW50U3RlcCA9PT0gMSkge1xuICAgICAgICAgICAgICAgIC8vIElEIFVwbG9hZCByZXF1aXJlZCBmaWVsZHNcbiAgICAgICAgICAgICAgICByZXR1cm4gQm9vbGVhbihmb3JtRGF0YS5uYXRpb25hbElEICYmIGZvcm1EYXRhLm5hdGlvbmFsQ291bnRyeUNvZGUpO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGlmIChjdXJyZW50U3RlcCA9PT0gMikge1xuICAgICAgICAgICAgICAgIC8vIFRyYW5zY3JpcHQgVXBsb2FkIHJlcXVpcmVkIGZpZWxkczogdHJhbnNjcmlwdDEgKyB0MSBjb3VudHJ5XG4gICAgICAgICAgICAgICAgcmV0dXJuIEJvb2xlYW4oZm9ybURhdGEudHJhbnNjcmlwdDEgJiYgZm9ybURhdGEudDFDb3VudHJ5Q29kZSk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGVwID09PSAzKSB7XG4gICAgICAgICAgICAgICAgLy8gQWRkaXRpb25hbCBEb2N1bWVudHM6IG5vIHJlcXVpcmVkIGZpZWxkc1xuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIFJldmlldyBzdGVwIC0gTmV4dCBub3Qgc2hvd25cbiAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgY29uc3QgY2FuUHJvY2VlZCA9IGlzU3RlcFZhbGlkKHN0ZXApO1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgPD48Lz5cbiAgICAgICAgICAgICk7XG4gICAgICAgICAgfSkoKX1cbiAgICAgICAgICB7c3RlcCA9PT0gMCAmJiAoXG4gICAgICAgICAgICA8U3RlcDFQZXJzb25hbEluZm8gZm9ybT17Zm9ybURhdGF9IHVwZGF0ZUZvcm09e2hhbmRsZUNoYW5nZX0gb25OZXh0PXtoYW5kbGVOZXh0fSBzdGVwPXsxfSAvPlxuICAgICAgICAgICl9XG4gICAgICAgICAge3N0ZXAgPT09IDEgJiYgKFxuICAgICAgICAgICAgPFN0ZXAyRG9jdW1lbnRVcGxvYWQgZm9ybT17Zm9ybURhdGF9IHVwZGF0ZUZvcm09e2hhbmRsZUNoYW5nZX0gb25OZXh0PXtoYW5kbGVOZXh0fSBvbkJhY2s9e2hhbmRsZUJhY2t9IHN0ZXA9ezJ9IC8+XG4gICAgICAgICAgKX1cbiAgICAgICAgICB7c3RlcCA9PT0gMiAmJiAoXG4gICAgICAgICAgICA8U3RlcDNBZGRpdGlvbmFsRGV0YWlscyBmb3JtPXtmb3JtRGF0YX0gdXBkYXRlRm9ybT17aGFuZGxlQ2hhbmdlfSBvbk5leHQ9e2hhbmRsZU5leHR9IG9uQmFjaz17aGFuZGxlQmFja30gc3RlcD17M30gLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtzdGVwID09PSAzICYmIChcbiAgICAgICAgICAgIDxBZGRpdGlvbmFsRG9jdW1lbnRzU3RlcCBmb3JtPXtmb3JtRGF0YX0gdXBkYXRlRm9ybT17aGFuZGxlQ2hhbmdlfSBvbk5leHQ9e2hhbmRsZU5leHR9IG9uQmFjaz17aGFuZGxlQmFja30gc3RlcD17NH0gLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHtzdGVwID09PSA0ICYmIChcbiAgICAgICAgICAgIDxTdGVwM1Jldmlld1N1Ym1pdFxuICAgICAgICAgICAgICBmb3JtPXtmb3JtRGF0YX1cbiAgICAgICAgICAgICAgdXBkYXRlRm9ybT17aGFuZGxlQ2hhbmdlfVxuICAgICAgICAgICAgICBvbkJhY2s9e2hhbmRsZUJhY2t9XG4gICAgICAgICAgICAgIG9uU3VibWl0PXtoYW5kbGVTdWJtaXR9XG4gICAgICAgICAgICAgIHN0ZXA9ezV9XG4gICAgICAgICAgICAgIHN1Ym1pdHRpbmc9e3N1Ym1pdHRpbmd9XG4gICAgICAgICAgICAgIHN1Ym1pdFJlc3VsdD17c3VibWl0UmVzdWx0fVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApfVxuICAgICAgICAgIHsvKiBJbnN0cnVjdGlvbiBtb3ZlZCB0byBlYWNoIHN0ZXAgcGFnZSB1bmRlciB0aGUgdGl0bGUgKi99XG4gICAgICAgICAgPEZvcm1OYXZpZ2F0aW9uXG4gICAgICAgICAgICBzdGVwPXtzdGVwfVxuICAgICAgICAgICAgc3RlcHNDb3VudD17c3RlcHNDb3VudH1cbiAgICAgICAgICAgIG5leHRTdGVwPXtoYW5kbGVOZXh0fVxuICAgICAgICAgICAgcHJldlN0ZXA9e2hhbmRsZUJhY2t9XG4gICAgICAgICAgICBoYW5kbGVTdWJtaXQ9e2hhbmRsZVN1Ym1pdH1cbiAgICAgICAgICAgIGZvcm1EYXRhPXtmb3JtRGF0YX1cbiAgICAgICAgICAgIHN1Ym1pdHRpbmc9e3N1Ym1pdHRpbmd9XG4gICAgICAgICAgICBjYW5Qcm9jZWVkPXsoZnVuY3Rpb24oKXtcbiAgICAgICAgICAgICAgY29uc3QgaXNTdGVwVmFsaWQgPSAoY3VycmVudFN0ZXA6IG51bWJlcik6IGJvb2xlYW4gPT4ge1xuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RlcCA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIEJvb2xlYW4oXG4gICAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLmZpcnN0TmFtZSAmJlxuICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YS5sYXN0TmFtZSAmJlxuICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YS5zdHVkZW50VHlwZSAmJlxuICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YS5kZWdyZWVMZXZlbCAmJlxuICAgICAgICAgICAgICAgICAgICBmb3JtRGF0YS5nZW5kZXIgJiZcbiAgICAgICAgICAgICAgICAgICAgZm9ybURhdGEuYmlydGhEYXRlICYmXG4gICAgICAgICAgICAgICAgICAgIGZvcm1EYXRhLnBlcnNvbmFsRW1haWxcbiAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmIChjdXJyZW50U3RlcCA9PT0gMSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIEJvb2xlYW4oZm9ybURhdGEubmF0aW9uYWxJRCAmJiBmb3JtRGF0YS5uYXRpb25hbENvdW50cnlDb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGVwID09PSAyKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gQm9vbGVhbihmb3JtRGF0YS50cmFuc2NyaXB0MSAmJiBmb3JtRGF0YS50MUNvdW50cnlDb2RlKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgaWYgKGN1cnJlbnRTdGVwID09PSAzKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgIHJldHVybiBpc1N0ZXBWYWxpZChzdGVwKTtcbiAgICAgICAgICAgIH0pKCl9XG4gICAgICAgICAgLz5cbiAgICAgICAgPC8+XG4gICAgICApfVxuICAgIDwvZGl2PlxuICApO1xufVxuIl0sIm5hbWVzIjpbInVzZVN0YXRlIiwiU3RlcDFQZXJzb25hbEluZm8iLCJTdGVwMkRvY3VtZW50VXBsb2FkIiwiU3RlcDNSZXZpZXdTdWJtaXQiLCJTdGVwM0FkZGl0aW9uYWxEZXRhaWxzIiwiQWRkaXRpb25hbERvY3VtZW50c1N0ZXAiLCJGb3JtTmF2aWdhdGlvbiIsIlN1Y2Nlc3NTdGVwIiwic3R1ZGVudFR5cGVzIiwiZGVncmVlTGV2ZWxzIiwiZ2VuZGVycyIsImluaXRpYWxGb3JtRGF0YSIsImZpcnN0TmFtZSIsImxhc3ROYW1lIiwibWlkZGxlTmFtZSIsImFkZGl0aW9uYWxOYW1lIiwic3R1ZGVudFR5cGUiLCJkZWdyZWVMZXZlbCIsImdlbmRlciIsImJpcnRoRGF0ZSIsInBlcnNvbmFsRW1haWwiLCJub3RlcyIsInRlcm1zQ29uZGl0aW9ucyIsInJlZmVyZW5jZU51bWJlciIsImFkZGl0aW9uYWxDb21tZW50cyIsIm5hdGlvbmFsQ291bnRyeSIsIm5hdGlvbmFsQ291bnRyeUNvZGUiLCJ0MUNvdW50cnkiLCJ0MUNvdW50cnlDb2RlIiwidDJDb3VudHJ5IiwidDJDb3VudHJ5Q29kZSIsInQzQ291bnRyeSIsInQzQ291bnRyeUNvZGUiLCJ0NENvdW50cnkiLCJ0NENvdW50cnlDb2RlIiwibmF0aW9uYWxJRCIsInRyYW5zY3JpcHQxIiwidHJhbnNjcmlwdDIiLCJ0cmFuc2NyaXB0MyIsInRyYW5zY3JpcHQ0IiwiYWRkaXRpb25hbERvYzEiLCJhZGRpdGlvbmFsRG9jMiIsIk11bHRpU3RlcEZvcm0iLCJzdGVwIiwic2V0U3RlcCIsImZvcm1EYXRhIiwic2V0Rm9ybURhdGEiLCJzdGVwc0NvdW50Iiwic3VibWl0dGluZyIsInNldFN1Ym1pdHRpbmciLCJzdWJtaXRSZXN1bHQiLCJzZXRTdWJtaXRSZXN1bHQiLCJoYW5kbGVDaGFuZ2UiLCJ1cGRhdGVzIiwicHJldiIsImhhbmRsZU5leHQiLCJzIiwiTWF0aCIsIm1pbiIsImhhbmRsZUJhY2siLCJtYXgiLCJoYW5kbGVTdWJtaXQiLCJoYXNOYXRpb25hbElEIiwiQm9vbGVhbiIsImhhc0FueVRyYW5zY3JpcHQiLCJlcnJvciIsInVwbG9hZFRvQmxvYiIsImZpbGUiLCJyIiwiZmV0Y2giLCJtZXRob2QiLCJoZWFkZXJzIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJjb250ZW50VHlwZSIsInR5cGUiLCJvayIsIkVycm9yIiwidGV4dCIsInVwbG9hZFVybCIsImpzb24iLCJ1cCIsImxvY2F0aW9uIiwiZ2V0IiwiZSIsImNvbnNvbGUiLCJzdHVkZW50VHlwZU9iaiIsImZpbmQiLCJzdCIsIm5hbWUiLCJjb2RlIiwiZGVncmVlTGV2ZWxPYmoiLCJkbCIsImdlbmRlck9iaiIsImciLCJzdHVkZW50VHlwZUNvZGUiLCJkZWdyZWVMZXZlbENvZGUiLCJnZW5kZXJDb2RlIiwiYmFzZUZpbGVOYW1lIiwiam9pbiIsInJlcGxhY2UiLCJuYXRpb25hbElERmlsZW5hbWUiLCJ0cmFuc2NyaXB0RmlsZU5hbWVzIiwibWFwIiwibnVtIiwiYWRkaXRpb25hbERvY3MxRmlsZU5hbWVzIiwiYWRkaXRpb25hbERvY3MyRmlsZU5hbWVzIiwic3VibWlzc2lvbkRhdGEiLCJmaWxlS2V5cyIsInVwbG9hZHMiLCJrZXkiLCJmIiwicHVzaCIsInVybCIsIlByb21pc2UiLCJhbGwiLCJmb2xkZXIiLCJ0cmFuc2NyaXB0MUZpbGVuYW1lIiwidHJhbnNjcmlwdDJGaWxlbmFtZSIsImFkZGl0aW9uYWxEb2NzMUZpbGVuYW1lIiwiYWRkaXRpb25hbERvY3MyRmlsZW5hbWUiLCJTdHJpbmciLCJ0cmltIiwiZGF0YSIsIkZvcm1EYXRhIiwiYXBwZW5kIiwiT2JqZWN0IiwiZW50cmllcyIsImZvckVhY2giLCJ2YWx1ZSIsInVuZGVmaW5lZCIsIkZpbGUiLCJzaXplIiwiayIsInYiLCJsb2ciLCJyZXNwb25zZSIsInJlc3VsdFRleHQiLCJzdWNjZXNzIiwiZXJyIiwibWVzc2FnZSIsImRpdiIsImNsYXNzTmFtZSIsImlzU3RlcFZhbGlkIiwiY3VycmVudFN0ZXAiLCJjYW5Qcm9jZWVkIiwiZm9ybSIsInVwZGF0ZUZvcm0iLCJvbk5leHQiLCJvbkJhY2siLCJvblN1Ym1pdCIsIm5leHRTdGVwIiwicHJldlN0ZXAiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/MultiStepForm.tsx\n"));

/***/ })

});